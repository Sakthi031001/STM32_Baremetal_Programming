
4_Instrumentation_Trace_Microcell_logs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012c4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000a0  08001494  08001494  00002494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001534  08001534  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001534  08001534  00002534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800153c  0800153c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800153c  0800153c  0000253c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001540  08001540  00002540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001544  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080015a0  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080015a0  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c99  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000481  00000000  00000000  00003d25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  000041a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e3  00000000  00000000  000042f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a7c7  00000000  00000000  000043db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001fe2  00000000  00000000  0001eba2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090433  00000000  00000000  00020b84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b0fb7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be4  00000000  00000000  000b0ffc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000a5  00000000  00000000  000b1be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800147c 	.word	0x0800147c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	0800147c 	.word	0x0800147c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include "stm32f446xx.h"
#include "swo.h"

int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	log_error("Initialization Failed \n");
 80002b4:	4805      	ldr	r0, [pc, #20]	@ (80002cc <main+0x1c>)
 80002b6:	f000 f843 	bl	8000340 <log_error>
	log_info("Info Passed \n");
 80002ba:	4805      	ldr	r0, [pc, #20]	@ (80002d0 <main+0x20>)
 80002bc:	f000 f856 	bl	800036c <log_info>
	log_debug("warning, There is a error \n");
 80002c0:	4804      	ldr	r0, [pc, #16]	@ (80002d4 <main+0x24>)
 80002c2:	f000 f869 	bl	8000398 <log_debug>

	while(1)
 80002c6:	bf00      	nop
 80002c8:	e7fd      	b.n	80002c6 <main+0x16>
 80002ca:	bf00      	nop
 80002cc:	08001494 	.word	0x08001494
 80002d0:	080014ac 	.word	0x080014ac
 80002d4:	080014bc 	.word	0x080014bc

080002d8 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002e0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002e4:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 80002e8:	f003 0301 	and.w	r3, r3, #1
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	d013      	beq.n	8000318 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002f0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80002f4:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 80002f8:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d00b      	beq.n	8000318 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000300:	e000      	b.n	8000304 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000302:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000304:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	2b00      	cmp	r3, #0
 800030c:	d0f9      	beq.n	8000302 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800030e:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000312:	687a      	ldr	r2, [r7, #4]
 8000314:	b2d2      	uxtb	r2, r2
 8000316:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000318:	687b      	ldr	r3, [r7, #4]
}
 800031a:	4618      	mov	r0, r3
 800031c:	370c      	adds	r7, #12
 800031e:	46bd      	mov	sp, r7
 8000320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000324:	4770      	bx	lr

08000326 <__io_putchar>:
#include "swo.h"
#include "stm32f446xx.h"
#include <stdio.h>

int __io_putchar(int ch)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b082      	sub	sp, #8
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4618      	mov	r0, r3
 8000332:	f7ff ffd1 	bl	80002d8 <ITM_SendChar>

	return ch;
 8000336:	687b      	ldr	r3, [r7, #4]
}
 8000338:	4618      	mov	r0, r3
 800033a:	3708      	adds	r7, #8
 800033c:	46bd      	mov	sp, r7
 800033e:	bd80      	pop	{r7, pc}

08000340 <log_error>:

void log_error(char *p)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b082      	sub	sp, #8
 8000344:	af00      	add	r7, sp, #0
 8000346:	6078      	str	r0, [r7, #4]
	printf("log Error: ");
 8000348:	4806      	ldr	r0, [pc, #24]	@ (8000364 <log_error+0x24>)
 800034a:	f000 f9cb 	bl	80006e4 <iprintf>
	printf((char *)p);
 800034e:	6878      	ldr	r0, [r7, #4]
 8000350:	f000 f9c8 	bl	80006e4 <iprintf>
	printf("\r\n");
 8000354:	4804      	ldr	r0, [pc, #16]	@ (8000368 <log_error+0x28>)
 8000356:	f000 fa2d 	bl	80007b4 <puts>
}
 800035a:	bf00      	nop
 800035c:	3708      	adds	r7, #8
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}
 8000362:	bf00      	nop
 8000364:	080014d8 	.word	0x080014d8
 8000368:	080014e4 	.word	0x080014e4

0800036c <log_info>:

void log_info(char *p)
{
 800036c:	b580      	push	{r7, lr}
 800036e:	b082      	sub	sp, #8
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]
	printf("Log Info: ");
 8000374:	4806      	ldr	r0, [pc, #24]	@ (8000390 <log_info+0x24>)
 8000376:	f000 f9b5 	bl	80006e4 <iprintf>
	printf((char *)p);
 800037a:	6878      	ldr	r0, [r7, #4]
 800037c:	f000 f9b2 	bl	80006e4 <iprintf>
	printf("\r\n");
 8000380:	4804      	ldr	r0, [pc, #16]	@ (8000394 <log_info+0x28>)
 8000382:	f000 fa17 	bl	80007b4 <puts>
}
 8000386:	bf00      	nop
 8000388:	3708      	adds	r7, #8
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}
 800038e:	bf00      	nop
 8000390:	080014e8 	.word	0x080014e8
 8000394:	080014e4 	.word	0x080014e4

08000398 <log_debug>:

void log_debug(char *p)
{
 8000398:	b580      	push	{r7, lr}
 800039a:	b082      	sub	sp, #8
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	printf("Log Debug: ");
 80003a0:	4806      	ldr	r0, [pc, #24]	@ (80003bc <log_debug+0x24>)
 80003a2:	f000 f99f 	bl	80006e4 <iprintf>
	printf((char *)p);
 80003a6:	6878      	ldr	r0, [r7, #4]
 80003a8:	f000 f99c 	bl	80006e4 <iprintf>
	printf("\r\n");
 80003ac:	4804      	ldr	r0, [pc, #16]	@ (80003c0 <log_debug+0x28>)
 80003ae:	f000 fa01 	bl	80007b4 <puts>
}
 80003b2:	bf00      	nop
 80003b4:	3708      	adds	r7, #8
 80003b6:	46bd      	mov	sp, r7
 80003b8:	bd80      	pop	{r7, pc}
 80003ba:	bf00      	nop
 80003bc:	080014f4 	.word	0x080014f4
 80003c0:	080014e4 	.word	0x080014e4

080003c4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b086      	sub	sp, #24
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	60f8      	str	r0, [r7, #12]
 80003cc:	60b9      	str	r1, [r7, #8]
 80003ce:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d0:	2300      	movs	r3, #0
 80003d2:	617b      	str	r3, [r7, #20]
 80003d4:	e00a      	b.n	80003ec <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003d6:	f3af 8000 	nop.w
 80003da:	4601      	mov	r1, r0
 80003dc:	68bb      	ldr	r3, [r7, #8]
 80003de:	1c5a      	adds	r2, r3, #1
 80003e0:	60ba      	str	r2, [r7, #8]
 80003e2:	b2ca      	uxtb	r2, r1
 80003e4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e6:	697b      	ldr	r3, [r7, #20]
 80003e8:	3301      	adds	r3, #1
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	697a      	ldr	r2, [r7, #20]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	429a      	cmp	r2, r3
 80003f2:	dbf0      	blt.n	80003d6 <_read+0x12>
  }

  return len;
 80003f4:	687b      	ldr	r3, [r7, #4]
}
 80003f6:	4618      	mov	r0, r3
 80003f8:	3718      	adds	r7, #24
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bd80      	pop	{r7, pc}

080003fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003fe:	b580      	push	{r7, lr}
 8000400:	b086      	sub	sp, #24
 8000402:	af00      	add	r7, sp, #0
 8000404:	60f8      	str	r0, [r7, #12]
 8000406:	60b9      	str	r1, [r7, #8]
 8000408:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040a:	2300      	movs	r3, #0
 800040c:	617b      	str	r3, [r7, #20]
 800040e:	e009      	b.n	8000424 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000410:	68bb      	ldr	r3, [r7, #8]
 8000412:	1c5a      	adds	r2, r3, #1
 8000414:	60ba      	str	r2, [r7, #8]
 8000416:	781b      	ldrb	r3, [r3, #0]
 8000418:	4618      	mov	r0, r3
 800041a:	f7ff ff84 	bl	8000326 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800041e:	697b      	ldr	r3, [r7, #20]
 8000420:	3301      	adds	r3, #1
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	697a      	ldr	r2, [r7, #20]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	429a      	cmp	r2, r3
 800042a:	dbf1      	blt.n	8000410 <_write+0x12>
  }
  return len;
 800042c:	687b      	ldr	r3, [r7, #4]
}
 800042e:	4618      	mov	r0, r3
 8000430:	3718      	adds	r7, #24
 8000432:	46bd      	mov	sp, r7
 8000434:	bd80      	pop	{r7, pc}

08000436 <_close>:

int _close(int file)
{
 8000436:	b480      	push	{r7}
 8000438:	b083      	sub	sp, #12
 800043a:	af00      	add	r7, sp, #0
 800043c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800043e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000442:	4618      	mov	r0, r3
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044c:	4770      	bx	lr

0800044e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800044e:	b480      	push	{r7}
 8000450:	b083      	sub	sp, #12
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
 8000456:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000458:	683b      	ldr	r3, [r7, #0]
 800045a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800045e:	605a      	str	r2, [r3, #4]
  return 0;
 8000460:	2300      	movs	r3, #0
}
 8000462:	4618      	mov	r0, r3
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr

0800046e <_isatty>:

int _isatty(int file)
{
 800046e:	b480      	push	{r7}
 8000470:	b083      	sub	sp, #12
 8000472:	af00      	add	r7, sp, #0
 8000474:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000476:	2301      	movs	r3, #1
}
 8000478:	4618      	mov	r0, r3
 800047a:	370c      	adds	r7, #12
 800047c:	46bd      	mov	sp, r7
 800047e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000482:	4770      	bx	lr

08000484 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000484:	b480      	push	{r7}
 8000486:	b085      	sub	sp, #20
 8000488:	af00      	add	r7, sp, #0
 800048a:	60f8      	str	r0, [r7, #12]
 800048c:	60b9      	str	r1, [r7, #8]
 800048e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000490:	2300      	movs	r3, #0
}
 8000492:	4618      	mov	r0, r3
 8000494:	3714      	adds	r7, #20
 8000496:	46bd      	mov	sp, r7
 8000498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049c:	4770      	bx	lr
	...

080004a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b086      	sub	sp, #24
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004a8:	4a14      	ldr	r2, [pc, #80]	@ (80004fc <_sbrk+0x5c>)
 80004aa:	4b15      	ldr	r3, [pc, #84]	@ (8000500 <_sbrk+0x60>)
 80004ac:	1ad3      	subs	r3, r2, r3
 80004ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b0:	697b      	ldr	r3, [r7, #20]
 80004b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b4:	4b13      	ldr	r3, [pc, #76]	@ (8000504 <_sbrk+0x64>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	2b00      	cmp	r3, #0
 80004ba:	d102      	bne.n	80004c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004bc:	4b11      	ldr	r3, [pc, #68]	@ (8000504 <_sbrk+0x64>)
 80004be:	4a12      	ldr	r2, [pc, #72]	@ (8000508 <_sbrk+0x68>)
 80004c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004c2:	4b10      	ldr	r3, [pc, #64]	@ (8000504 <_sbrk+0x64>)
 80004c4:	681a      	ldr	r2, [r3, #0]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	4413      	add	r3, r2
 80004ca:	693a      	ldr	r2, [r7, #16]
 80004cc:	429a      	cmp	r2, r3
 80004ce:	d207      	bcs.n	80004e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d0:	f000 fa9e 	bl	8000a10 <__errno>
 80004d4:	4603      	mov	r3, r0
 80004d6:	220c      	movs	r2, #12
 80004d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004da:	f04f 33ff 	mov.w	r3, #4294967295
 80004de:	e009      	b.n	80004f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e0:	4b08      	ldr	r3, [pc, #32]	@ (8000504 <_sbrk+0x64>)
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004e6:	4b07      	ldr	r3, [pc, #28]	@ (8000504 <_sbrk+0x64>)
 80004e8:	681a      	ldr	r2, [r3, #0]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4413      	add	r3, r2
 80004ee:	4a05      	ldr	r2, [pc, #20]	@ (8000504 <_sbrk+0x64>)
 80004f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004f2:	68fb      	ldr	r3, [r7, #12]
}
 80004f4:	4618      	mov	r0, r3
 80004f6:	3718      	adds	r7, #24
 80004f8:	46bd      	mov	sp, r7
 80004fa:	bd80      	pop	{r7, pc}
 80004fc:	20020000 	.word	0x20020000
 8000500:	00000400 	.word	0x00000400
 8000504:	20000078 	.word	0x20000078
 8000508:	200001c8 	.word	0x200001c8

0800050c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800050c:	480d      	ldr	r0, [pc, #52]	@ (8000544 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000510:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000514:	480c      	ldr	r0, [pc, #48]	@ (8000548 <LoopForever+0x6>)
  ldr r1, =_edata
 8000516:	490d      	ldr	r1, [pc, #52]	@ (800054c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000518:	4a0d      	ldr	r2, [pc, #52]	@ (8000550 <LoopForever+0xe>)
  movs r3, #0
 800051a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800051c:	e002      	b.n	8000524 <LoopCopyDataInit>

0800051e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800051e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000520:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000522:	3304      	adds	r3, #4

08000524 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000524:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000526:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000528:	d3f9      	bcc.n	800051e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800052a:	4a0a      	ldr	r2, [pc, #40]	@ (8000554 <LoopForever+0x12>)
  ldr r4, =_ebss
 800052c:	4c0a      	ldr	r4, [pc, #40]	@ (8000558 <LoopForever+0x16>)
  movs r3, #0
 800052e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000530:	e001      	b.n	8000536 <LoopFillZerobss>

08000532 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000532:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000534:	3204      	adds	r2, #4

08000536 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000536:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000538:	d3fb      	bcc.n	8000532 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800053a:	f000 fa6f 	bl	8000a1c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053e:	f7ff feb7 	bl	80002b0 <main>

08000542 <LoopForever>:

LoopForever:
  b LoopForever
 8000542:	e7fe      	b.n	8000542 <LoopForever>
  ldr   r0, =_estack
 8000544:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000548:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800054c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000550:	08001544 	.word	0x08001544
  ldr r2, =_sbss
 8000554:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000558:	200001c8 	.word	0x200001c8

0800055c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800055c:	e7fe      	b.n	800055c <ADC_IRQHandler>
	...

08000560 <std>:
 8000560:	2300      	movs	r3, #0
 8000562:	b510      	push	{r4, lr}
 8000564:	4604      	mov	r4, r0
 8000566:	e9c0 3300 	strd	r3, r3, [r0]
 800056a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800056e:	6083      	str	r3, [r0, #8]
 8000570:	8181      	strh	r1, [r0, #12]
 8000572:	6643      	str	r3, [r0, #100]	@ 0x64
 8000574:	81c2      	strh	r2, [r0, #14]
 8000576:	6183      	str	r3, [r0, #24]
 8000578:	4619      	mov	r1, r3
 800057a:	2208      	movs	r2, #8
 800057c:	305c      	adds	r0, #92	@ 0x5c
 800057e:	f000 f9f9 	bl	8000974 <memset>
 8000582:	4b0d      	ldr	r3, [pc, #52]	@ (80005b8 <std+0x58>)
 8000584:	6263      	str	r3, [r4, #36]	@ 0x24
 8000586:	4b0d      	ldr	r3, [pc, #52]	@ (80005bc <std+0x5c>)
 8000588:	62a3      	str	r3, [r4, #40]	@ 0x28
 800058a:	4b0d      	ldr	r3, [pc, #52]	@ (80005c0 <std+0x60>)
 800058c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800058e:	4b0d      	ldr	r3, [pc, #52]	@ (80005c4 <std+0x64>)
 8000590:	6323      	str	r3, [r4, #48]	@ 0x30
 8000592:	4b0d      	ldr	r3, [pc, #52]	@ (80005c8 <std+0x68>)
 8000594:	6224      	str	r4, [r4, #32]
 8000596:	429c      	cmp	r4, r3
 8000598:	d006      	beq.n	80005a8 <std+0x48>
 800059a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800059e:	4294      	cmp	r4, r2
 80005a0:	d002      	beq.n	80005a8 <std+0x48>
 80005a2:	33d0      	adds	r3, #208	@ 0xd0
 80005a4:	429c      	cmp	r4, r3
 80005a6:	d105      	bne.n	80005b4 <std+0x54>
 80005a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b0:	f000 ba58 	b.w	8000a64 <__retarget_lock_init_recursive>
 80005b4:	bd10      	pop	{r4, pc}
 80005b6:	bf00      	nop
 80005b8:	080007c5 	.word	0x080007c5
 80005bc:	080007e7 	.word	0x080007e7
 80005c0:	0800081f 	.word	0x0800081f
 80005c4:	08000843 	.word	0x08000843
 80005c8:	2000007c 	.word	0x2000007c

080005cc <stdio_exit_handler>:
 80005cc:	4a02      	ldr	r2, [pc, #8]	@ (80005d8 <stdio_exit_handler+0xc>)
 80005ce:	4903      	ldr	r1, [pc, #12]	@ (80005dc <stdio_exit_handler+0x10>)
 80005d0:	4803      	ldr	r0, [pc, #12]	@ (80005e0 <stdio_exit_handler+0x14>)
 80005d2:	f000 b869 	b.w	80006a8 <_fwalk_sglue>
 80005d6:	bf00      	nop
 80005d8:	20000000 	.word	0x20000000
 80005dc:	08001305 	.word	0x08001305
 80005e0:	20000010 	.word	0x20000010

080005e4 <cleanup_stdio>:
 80005e4:	6841      	ldr	r1, [r0, #4]
 80005e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000618 <cleanup_stdio+0x34>)
 80005e8:	4299      	cmp	r1, r3
 80005ea:	b510      	push	{r4, lr}
 80005ec:	4604      	mov	r4, r0
 80005ee:	d001      	beq.n	80005f4 <cleanup_stdio+0x10>
 80005f0:	f000 fe88 	bl	8001304 <_fflush_r>
 80005f4:	68a1      	ldr	r1, [r4, #8]
 80005f6:	4b09      	ldr	r3, [pc, #36]	@ (800061c <cleanup_stdio+0x38>)
 80005f8:	4299      	cmp	r1, r3
 80005fa:	d002      	beq.n	8000602 <cleanup_stdio+0x1e>
 80005fc:	4620      	mov	r0, r4
 80005fe:	f000 fe81 	bl	8001304 <_fflush_r>
 8000602:	68e1      	ldr	r1, [r4, #12]
 8000604:	4b06      	ldr	r3, [pc, #24]	@ (8000620 <cleanup_stdio+0x3c>)
 8000606:	4299      	cmp	r1, r3
 8000608:	d004      	beq.n	8000614 <cleanup_stdio+0x30>
 800060a:	4620      	mov	r0, r4
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	f000 be78 	b.w	8001304 <_fflush_r>
 8000614:	bd10      	pop	{r4, pc}
 8000616:	bf00      	nop
 8000618:	2000007c 	.word	0x2000007c
 800061c:	200000e4 	.word	0x200000e4
 8000620:	2000014c 	.word	0x2000014c

08000624 <global_stdio_init.part.0>:
 8000624:	b510      	push	{r4, lr}
 8000626:	4b0b      	ldr	r3, [pc, #44]	@ (8000654 <global_stdio_init.part.0+0x30>)
 8000628:	4c0b      	ldr	r4, [pc, #44]	@ (8000658 <global_stdio_init.part.0+0x34>)
 800062a:	4a0c      	ldr	r2, [pc, #48]	@ (800065c <global_stdio_init.part.0+0x38>)
 800062c:	601a      	str	r2, [r3, #0]
 800062e:	4620      	mov	r0, r4
 8000630:	2200      	movs	r2, #0
 8000632:	2104      	movs	r1, #4
 8000634:	f7ff ff94 	bl	8000560 <std>
 8000638:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800063c:	2201      	movs	r2, #1
 800063e:	2109      	movs	r1, #9
 8000640:	f7ff ff8e 	bl	8000560 <std>
 8000644:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000648:	2202      	movs	r2, #2
 800064a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800064e:	2112      	movs	r1, #18
 8000650:	f7ff bf86 	b.w	8000560 <std>
 8000654:	200001b4 	.word	0x200001b4
 8000658:	2000007c 	.word	0x2000007c
 800065c:	080005cd 	.word	0x080005cd

08000660 <__sfp_lock_acquire>:
 8000660:	4801      	ldr	r0, [pc, #4]	@ (8000668 <__sfp_lock_acquire+0x8>)
 8000662:	f000 ba00 	b.w	8000a66 <__retarget_lock_acquire_recursive>
 8000666:	bf00      	nop
 8000668:	200001bd 	.word	0x200001bd

0800066c <__sfp_lock_release>:
 800066c:	4801      	ldr	r0, [pc, #4]	@ (8000674 <__sfp_lock_release+0x8>)
 800066e:	f000 b9fb 	b.w	8000a68 <__retarget_lock_release_recursive>
 8000672:	bf00      	nop
 8000674:	200001bd 	.word	0x200001bd

08000678 <__sinit>:
 8000678:	b510      	push	{r4, lr}
 800067a:	4604      	mov	r4, r0
 800067c:	f7ff fff0 	bl	8000660 <__sfp_lock_acquire>
 8000680:	6a23      	ldr	r3, [r4, #32]
 8000682:	b11b      	cbz	r3, 800068c <__sinit+0x14>
 8000684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000688:	f7ff bff0 	b.w	800066c <__sfp_lock_release>
 800068c:	4b04      	ldr	r3, [pc, #16]	@ (80006a0 <__sinit+0x28>)
 800068e:	6223      	str	r3, [r4, #32]
 8000690:	4b04      	ldr	r3, [pc, #16]	@ (80006a4 <__sinit+0x2c>)
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	2b00      	cmp	r3, #0
 8000696:	d1f5      	bne.n	8000684 <__sinit+0xc>
 8000698:	f7ff ffc4 	bl	8000624 <global_stdio_init.part.0>
 800069c:	e7f2      	b.n	8000684 <__sinit+0xc>
 800069e:	bf00      	nop
 80006a0:	080005e5 	.word	0x080005e5
 80006a4:	200001b4 	.word	0x200001b4

080006a8 <_fwalk_sglue>:
 80006a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006ac:	4607      	mov	r7, r0
 80006ae:	4688      	mov	r8, r1
 80006b0:	4614      	mov	r4, r2
 80006b2:	2600      	movs	r6, #0
 80006b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006b8:	f1b9 0901 	subs.w	r9, r9, #1
 80006bc:	d505      	bpl.n	80006ca <_fwalk_sglue+0x22>
 80006be:	6824      	ldr	r4, [r4, #0]
 80006c0:	2c00      	cmp	r4, #0
 80006c2:	d1f7      	bne.n	80006b4 <_fwalk_sglue+0xc>
 80006c4:	4630      	mov	r0, r6
 80006c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006ca:	89ab      	ldrh	r3, [r5, #12]
 80006cc:	2b01      	cmp	r3, #1
 80006ce:	d907      	bls.n	80006e0 <_fwalk_sglue+0x38>
 80006d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006d4:	3301      	adds	r3, #1
 80006d6:	d003      	beq.n	80006e0 <_fwalk_sglue+0x38>
 80006d8:	4629      	mov	r1, r5
 80006da:	4638      	mov	r0, r7
 80006dc:	47c0      	blx	r8
 80006de:	4306      	orrs	r6, r0
 80006e0:	3568      	adds	r5, #104	@ 0x68
 80006e2:	e7e9      	b.n	80006b8 <_fwalk_sglue+0x10>

080006e4 <iprintf>:
 80006e4:	b40f      	push	{r0, r1, r2, r3}
 80006e6:	b507      	push	{r0, r1, r2, lr}
 80006e8:	4906      	ldr	r1, [pc, #24]	@ (8000704 <iprintf+0x20>)
 80006ea:	ab04      	add	r3, sp, #16
 80006ec:	6808      	ldr	r0, [r1, #0]
 80006ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80006f2:	6881      	ldr	r1, [r0, #8]
 80006f4:	9301      	str	r3, [sp, #4]
 80006f6:	f000 fadb 	bl	8000cb0 <_vfiprintf_r>
 80006fa:	b003      	add	sp, #12
 80006fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000700:	b004      	add	sp, #16
 8000702:	4770      	bx	lr
 8000704:	2000000c 	.word	0x2000000c

08000708 <_puts_r>:
 8000708:	6a03      	ldr	r3, [r0, #32]
 800070a:	b570      	push	{r4, r5, r6, lr}
 800070c:	6884      	ldr	r4, [r0, #8]
 800070e:	4605      	mov	r5, r0
 8000710:	460e      	mov	r6, r1
 8000712:	b90b      	cbnz	r3, 8000718 <_puts_r+0x10>
 8000714:	f7ff ffb0 	bl	8000678 <__sinit>
 8000718:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800071a:	07db      	lsls	r3, r3, #31
 800071c:	d405      	bmi.n	800072a <_puts_r+0x22>
 800071e:	89a3      	ldrh	r3, [r4, #12]
 8000720:	0598      	lsls	r0, r3, #22
 8000722:	d402      	bmi.n	800072a <_puts_r+0x22>
 8000724:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000726:	f000 f99e 	bl	8000a66 <__retarget_lock_acquire_recursive>
 800072a:	89a3      	ldrh	r3, [r4, #12]
 800072c:	0719      	lsls	r1, r3, #28
 800072e:	d502      	bpl.n	8000736 <_puts_r+0x2e>
 8000730:	6923      	ldr	r3, [r4, #16]
 8000732:	2b00      	cmp	r3, #0
 8000734:	d135      	bne.n	80007a2 <_puts_r+0x9a>
 8000736:	4621      	mov	r1, r4
 8000738:	4628      	mov	r0, r5
 800073a:	f000 f8c5 	bl	80008c8 <__swsetup_r>
 800073e:	b380      	cbz	r0, 80007a2 <_puts_r+0x9a>
 8000740:	f04f 35ff 	mov.w	r5, #4294967295
 8000744:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000746:	07da      	lsls	r2, r3, #31
 8000748:	d405      	bmi.n	8000756 <_puts_r+0x4e>
 800074a:	89a3      	ldrh	r3, [r4, #12]
 800074c:	059b      	lsls	r3, r3, #22
 800074e:	d402      	bmi.n	8000756 <_puts_r+0x4e>
 8000750:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000752:	f000 f989 	bl	8000a68 <__retarget_lock_release_recursive>
 8000756:	4628      	mov	r0, r5
 8000758:	bd70      	pop	{r4, r5, r6, pc}
 800075a:	2b00      	cmp	r3, #0
 800075c:	da04      	bge.n	8000768 <_puts_r+0x60>
 800075e:	69a2      	ldr	r2, [r4, #24]
 8000760:	429a      	cmp	r2, r3
 8000762:	dc17      	bgt.n	8000794 <_puts_r+0x8c>
 8000764:	290a      	cmp	r1, #10
 8000766:	d015      	beq.n	8000794 <_puts_r+0x8c>
 8000768:	6823      	ldr	r3, [r4, #0]
 800076a:	1c5a      	adds	r2, r3, #1
 800076c:	6022      	str	r2, [r4, #0]
 800076e:	7019      	strb	r1, [r3, #0]
 8000770:	68a3      	ldr	r3, [r4, #8]
 8000772:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000776:	3b01      	subs	r3, #1
 8000778:	60a3      	str	r3, [r4, #8]
 800077a:	2900      	cmp	r1, #0
 800077c:	d1ed      	bne.n	800075a <_puts_r+0x52>
 800077e:	2b00      	cmp	r3, #0
 8000780:	da11      	bge.n	80007a6 <_puts_r+0x9e>
 8000782:	4622      	mov	r2, r4
 8000784:	210a      	movs	r1, #10
 8000786:	4628      	mov	r0, r5
 8000788:	f000 f85f 	bl	800084a <__swbuf_r>
 800078c:	3001      	adds	r0, #1
 800078e:	d0d7      	beq.n	8000740 <_puts_r+0x38>
 8000790:	250a      	movs	r5, #10
 8000792:	e7d7      	b.n	8000744 <_puts_r+0x3c>
 8000794:	4622      	mov	r2, r4
 8000796:	4628      	mov	r0, r5
 8000798:	f000 f857 	bl	800084a <__swbuf_r>
 800079c:	3001      	adds	r0, #1
 800079e:	d1e7      	bne.n	8000770 <_puts_r+0x68>
 80007a0:	e7ce      	b.n	8000740 <_puts_r+0x38>
 80007a2:	3e01      	subs	r6, #1
 80007a4:	e7e4      	b.n	8000770 <_puts_r+0x68>
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	1c5a      	adds	r2, r3, #1
 80007aa:	6022      	str	r2, [r4, #0]
 80007ac:	220a      	movs	r2, #10
 80007ae:	701a      	strb	r2, [r3, #0]
 80007b0:	e7ee      	b.n	8000790 <_puts_r+0x88>
	...

080007b4 <puts>:
 80007b4:	4b02      	ldr	r3, [pc, #8]	@ (80007c0 <puts+0xc>)
 80007b6:	4601      	mov	r1, r0
 80007b8:	6818      	ldr	r0, [r3, #0]
 80007ba:	f7ff bfa5 	b.w	8000708 <_puts_r>
 80007be:	bf00      	nop
 80007c0:	2000000c 	.word	0x2000000c

080007c4 <__sread>:
 80007c4:	b510      	push	{r4, lr}
 80007c6:	460c      	mov	r4, r1
 80007c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007cc:	f000 f8fc 	bl	80009c8 <_read_r>
 80007d0:	2800      	cmp	r0, #0
 80007d2:	bfab      	itete	ge
 80007d4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80007d6:	89a3      	ldrhlt	r3, [r4, #12]
 80007d8:	181b      	addge	r3, r3, r0
 80007da:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80007de:	bfac      	ite	ge
 80007e0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80007e2:	81a3      	strhlt	r3, [r4, #12]
 80007e4:	bd10      	pop	{r4, pc}

080007e6 <__swrite>:
 80007e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007ea:	461f      	mov	r7, r3
 80007ec:	898b      	ldrh	r3, [r1, #12]
 80007ee:	05db      	lsls	r3, r3, #23
 80007f0:	4605      	mov	r5, r0
 80007f2:	460c      	mov	r4, r1
 80007f4:	4616      	mov	r6, r2
 80007f6:	d505      	bpl.n	8000804 <__swrite+0x1e>
 80007f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007fc:	2302      	movs	r3, #2
 80007fe:	2200      	movs	r2, #0
 8000800:	f000 f8d0 	bl	80009a4 <_lseek_r>
 8000804:	89a3      	ldrh	r3, [r4, #12]
 8000806:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800080a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800080e:	81a3      	strh	r3, [r4, #12]
 8000810:	4632      	mov	r2, r6
 8000812:	463b      	mov	r3, r7
 8000814:	4628      	mov	r0, r5
 8000816:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800081a:	f000 b8e7 	b.w	80009ec <_write_r>

0800081e <__sseek>:
 800081e:	b510      	push	{r4, lr}
 8000820:	460c      	mov	r4, r1
 8000822:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000826:	f000 f8bd 	bl	80009a4 <_lseek_r>
 800082a:	1c43      	adds	r3, r0, #1
 800082c:	89a3      	ldrh	r3, [r4, #12]
 800082e:	bf15      	itete	ne
 8000830:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000832:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000836:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800083a:	81a3      	strheq	r3, [r4, #12]
 800083c:	bf18      	it	ne
 800083e:	81a3      	strhne	r3, [r4, #12]
 8000840:	bd10      	pop	{r4, pc}

08000842 <__sclose>:
 8000842:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000846:	f000 b89d 	b.w	8000984 <_close_r>

0800084a <__swbuf_r>:
 800084a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800084c:	460e      	mov	r6, r1
 800084e:	4614      	mov	r4, r2
 8000850:	4605      	mov	r5, r0
 8000852:	b118      	cbz	r0, 800085c <__swbuf_r+0x12>
 8000854:	6a03      	ldr	r3, [r0, #32]
 8000856:	b90b      	cbnz	r3, 800085c <__swbuf_r+0x12>
 8000858:	f7ff ff0e 	bl	8000678 <__sinit>
 800085c:	69a3      	ldr	r3, [r4, #24]
 800085e:	60a3      	str	r3, [r4, #8]
 8000860:	89a3      	ldrh	r3, [r4, #12]
 8000862:	071a      	lsls	r2, r3, #28
 8000864:	d501      	bpl.n	800086a <__swbuf_r+0x20>
 8000866:	6923      	ldr	r3, [r4, #16]
 8000868:	b943      	cbnz	r3, 800087c <__swbuf_r+0x32>
 800086a:	4621      	mov	r1, r4
 800086c:	4628      	mov	r0, r5
 800086e:	f000 f82b 	bl	80008c8 <__swsetup_r>
 8000872:	b118      	cbz	r0, 800087c <__swbuf_r+0x32>
 8000874:	f04f 37ff 	mov.w	r7, #4294967295
 8000878:	4638      	mov	r0, r7
 800087a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800087c:	6823      	ldr	r3, [r4, #0]
 800087e:	6922      	ldr	r2, [r4, #16]
 8000880:	1a98      	subs	r0, r3, r2
 8000882:	6963      	ldr	r3, [r4, #20]
 8000884:	b2f6      	uxtb	r6, r6
 8000886:	4283      	cmp	r3, r0
 8000888:	4637      	mov	r7, r6
 800088a:	dc05      	bgt.n	8000898 <__swbuf_r+0x4e>
 800088c:	4621      	mov	r1, r4
 800088e:	4628      	mov	r0, r5
 8000890:	f000 fd38 	bl	8001304 <_fflush_r>
 8000894:	2800      	cmp	r0, #0
 8000896:	d1ed      	bne.n	8000874 <__swbuf_r+0x2a>
 8000898:	68a3      	ldr	r3, [r4, #8]
 800089a:	3b01      	subs	r3, #1
 800089c:	60a3      	str	r3, [r4, #8]
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	1c5a      	adds	r2, r3, #1
 80008a2:	6022      	str	r2, [r4, #0]
 80008a4:	701e      	strb	r6, [r3, #0]
 80008a6:	6962      	ldr	r2, [r4, #20]
 80008a8:	1c43      	adds	r3, r0, #1
 80008aa:	429a      	cmp	r2, r3
 80008ac:	d004      	beq.n	80008b8 <__swbuf_r+0x6e>
 80008ae:	89a3      	ldrh	r3, [r4, #12]
 80008b0:	07db      	lsls	r3, r3, #31
 80008b2:	d5e1      	bpl.n	8000878 <__swbuf_r+0x2e>
 80008b4:	2e0a      	cmp	r6, #10
 80008b6:	d1df      	bne.n	8000878 <__swbuf_r+0x2e>
 80008b8:	4621      	mov	r1, r4
 80008ba:	4628      	mov	r0, r5
 80008bc:	f000 fd22 	bl	8001304 <_fflush_r>
 80008c0:	2800      	cmp	r0, #0
 80008c2:	d0d9      	beq.n	8000878 <__swbuf_r+0x2e>
 80008c4:	e7d6      	b.n	8000874 <__swbuf_r+0x2a>
	...

080008c8 <__swsetup_r>:
 80008c8:	b538      	push	{r3, r4, r5, lr}
 80008ca:	4b29      	ldr	r3, [pc, #164]	@ (8000970 <__swsetup_r+0xa8>)
 80008cc:	4605      	mov	r5, r0
 80008ce:	6818      	ldr	r0, [r3, #0]
 80008d0:	460c      	mov	r4, r1
 80008d2:	b118      	cbz	r0, 80008dc <__swsetup_r+0x14>
 80008d4:	6a03      	ldr	r3, [r0, #32]
 80008d6:	b90b      	cbnz	r3, 80008dc <__swsetup_r+0x14>
 80008d8:	f7ff fece 	bl	8000678 <__sinit>
 80008dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008e0:	0719      	lsls	r1, r3, #28
 80008e2:	d422      	bmi.n	800092a <__swsetup_r+0x62>
 80008e4:	06da      	lsls	r2, r3, #27
 80008e6:	d407      	bmi.n	80008f8 <__swsetup_r+0x30>
 80008e8:	2209      	movs	r2, #9
 80008ea:	602a      	str	r2, [r5, #0]
 80008ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008f0:	81a3      	strh	r3, [r4, #12]
 80008f2:	f04f 30ff 	mov.w	r0, #4294967295
 80008f6:	e033      	b.n	8000960 <__swsetup_r+0x98>
 80008f8:	0758      	lsls	r0, r3, #29
 80008fa:	d512      	bpl.n	8000922 <__swsetup_r+0x5a>
 80008fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80008fe:	b141      	cbz	r1, 8000912 <__swsetup_r+0x4a>
 8000900:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000904:	4299      	cmp	r1, r3
 8000906:	d002      	beq.n	800090e <__swsetup_r+0x46>
 8000908:	4628      	mov	r0, r5
 800090a:	f000 f8af 	bl	8000a6c <_free_r>
 800090e:	2300      	movs	r3, #0
 8000910:	6363      	str	r3, [r4, #52]	@ 0x34
 8000912:	89a3      	ldrh	r3, [r4, #12]
 8000914:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000918:	81a3      	strh	r3, [r4, #12]
 800091a:	2300      	movs	r3, #0
 800091c:	6063      	str	r3, [r4, #4]
 800091e:	6923      	ldr	r3, [r4, #16]
 8000920:	6023      	str	r3, [r4, #0]
 8000922:	89a3      	ldrh	r3, [r4, #12]
 8000924:	f043 0308 	orr.w	r3, r3, #8
 8000928:	81a3      	strh	r3, [r4, #12]
 800092a:	6923      	ldr	r3, [r4, #16]
 800092c:	b94b      	cbnz	r3, 8000942 <__swsetup_r+0x7a>
 800092e:	89a3      	ldrh	r3, [r4, #12]
 8000930:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000934:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000938:	d003      	beq.n	8000942 <__swsetup_r+0x7a>
 800093a:	4621      	mov	r1, r4
 800093c:	4628      	mov	r0, r5
 800093e:	f000 fd2f 	bl	80013a0 <__smakebuf_r>
 8000942:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000946:	f013 0201 	ands.w	r2, r3, #1
 800094a:	d00a      	beq.n	8000962 <__swsetup_r+0x9a>
 800094c:	2200      	movs	r2, #0
 800094e:	60a2      	str	r2, [r4, #8]
 8000950:	6962      	ldr	r2, [r4, #20]
 8000952:	4252      	negs	r2, r2
 8000954:	61a2      	str	r2, [r4, #24]
 8000956:	6922      	ldr	r2, [r4, #16]
 8000958:	b942      	cbnz	r2, 800096c <__swsetup_r+0xa4>
 800095a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800095e:	d1c5      	bne.n	80008ec <__swsetup_r+0x24>
 8000960:	bd38      	pop	{r3, r4, r5, pc}
 8000962:	0799      	lsls	r1, r3, #30
 8000964:	bf58      	it	pl
 8000966:	6962      	ldrpl	r2, [r4, #20]
 8000968:	60a2      	str	r2, [r4, #8]
 800096a:	e7f4      	b.n	8000956 <__swsetup_r+0x8e>
 800096c:	2000      	movs	r0, #0
 800096e:	e7f7      	b.n	8000960 <__swsetup_r+0x98>
 8000970:	2000000c 	.word	0x2000000c

08000974 <memset>:
 8000974:	4402      	add	r2, r0
 8000976:	4603      	mov	r3, r0
 8000978:	4293      	cmp	r3, r2
 800097a:	d100      	bne.n	800097e <memset+0xa>
 800097c:	4770      	bx	lr
 800097e:	f803 1b01 	strb.w	r1, [r3], #1
 8000982:	e7f9      	b.n	8000978 <memset+0x4>

08000984 <_close_r>:
 8000984:	b538      	push	{r3, r4, r5, lr}
 8000986:	4d06      	ldr	r5, [pc, #24]	@ (80009a0 <_close_r+0x1c>)
 8000988:	2300      	movs	r3, #0
 800098a:	4604      	mov	r4, r0
 800098c:	4608      	mov	r0, r1
 800098e:	602b      	str	r3, [r5, #0]
 8000990:	f7ff fd51 	bl	8000436 <_close>
 8000994:	1c43      	adds	r3, r0, #1
 8000996:	d102      	bne.n	800099e <_close_r+0x1a>
 8000998:	682b      	ldr	r3, [r5, #0]
 800099a:	b103      	cbz	r3, 800099e <_close_r+0x1a>
 800099c:	6023      	str	r3, [r4, #0]
 800099e:	bd38      	pop	{r3, r4, r5, pc}
 80009a0:	200001b8 	.word	0x200001b8

080009a4 <_lseek_r>:
 80009a4:	b538      	push	{r3, r4, r5, lr}
 80009a6:	4d07      	ldr	r5, [pc, #28]	@ (80009c4 <_lseek_r+0x20>)
 80009a8:	4604      	mov	r4, r0
 80009aa:	4608      	mov	r0, r1
 80009ac:	4611      	mov	r1, r2
 80009ae:	2200      	movs	r2, #0
 80009b0:	602a      	str	r2, [r5, #0]
 80009b2:	461a      	mov	r2, r3
 80009b4:	f7ff fd66 	bl	8000484 <_lseek>
 80009b8:	1c43      	adds	r3, r0, #1
 80009ba:	d102      	bne.n	80009c2 <_lseek_r+0x1e>
 80009bc:	682b      	ldr	r3, [r5, #0]
 80009be:	b103      	cbz	r3, 80009c2 <_lseek_r+0x1e>
 80009c0:	6023      	str	r3, [r4, #0]
 80009c2:	bd38      	pop	{r3, r4, r5, pc}
 80009c4:	200001b8 	.word	0x200001b8

080009c8 <_read_r>:
 80009c8:	b538      	push	{r3, r4, r5, lr}
 80009ca:	4d07      	ldr	r5, [pc, #28]	@ (80009e8 <_read_r+0x20>)
 80009cc:	4604      	mov	r4, r0
 80009ce:	4608      	mov	r0, r1
 80009d0:	4611      	mov	r1, r2
 80009d2:	2200      	movs	r2, #0
 80009d4:	602a      	str	r2, [r5, #0]
 80009d6:	461a      	mov	r2, r3
 80009d8:	f7ff fcf4 	bl	80003c4 <_read>
 80009dc:	1c43      	adds	r3, r0, #1
 80009de:	d102      	bne.n	80009e6 <_read_r+0x1e>
 80009e0:	682b      	ldr	r3, [r5, #0]
 80009e2:	b103      	cbz	r3, 80009e6 <_read_r+0x1e>
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	bd38      	pop	{r3, r4, r5, pc}
 80009e8:	200001b8 	.word	0x200001b8

080009ec <_write_r>:
 80009ec:	b538      	push	{r3, r4, r5, lr}
 80009ee:	4d07      	ldr	r5, [pc, #28]	@ (8000a0c <_write_r+0x20>)
 80009f0:	4604      	mov	r4, r0
 80009f2:	4608      	mov	r0, r1
 80009f4:	4611      	mov	r1, r2
 80009f6:	2200      	movs	r2, #0
 80009f8:	602a      	str	r2, [r5, #0]
 80009fa:	461a      	mov	r2, r3
 80009fc:	f7ff fcff 	bl	80003fe <_write>
 8000a00:	1c43      	adds	r3, r0, #1
 8000a02:	d102      	bne.n	8000a0a <_write_r+0x1e>
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	b103      	cbz	r3, 8000a0a <_write_r+0x1e>
 8000a08:	6023      	str	r3, [r4, #0]
 8000a0a:	bd38      	pop	{r3, r4, r5, pc}
 8000a0c:	200001b8 	.word	0x200001b8

08000a10 <__errno>:
 8000a10:	4b01      	ldr	r3, [pc, #4]	@ (8000a18 <__errno+0x8>)
 8000a12:	6818      	ldr	r0, [r3, #0]
 8000a14:	4770      	bx	lr
 8000a16:	bf00      	nop
 8000a18:	2000000c 	.word	0x2000000c

08000a1c <__libc_init_array>:
 8000a1c:	b570      	push	{r4, r5, r6, lr}
 8000a1e:	4d0d      	ldr	r5, [pc, #52]	@ (8000a54 <__libc_init_array+0x38>)
 8000a20:	4c0d      	ldr	r4, [pc, #52]	@ (8000a58 <__libc_init_array+0x3c>)
 8000a22:	1b64      	subs	r4, r4, r5
 8000a24:	10a4      	asrs	r4, r4, #2
 8000a26:	2600      	movs	r6, #0
 8000a28:	42a6      	cmp	r6, r4
 8000a2a:	d109      	bne.n	8000a40 <__libc_init_array+0x24>
 8000a2c:	4d0b      	ldr	r5, [pc, #44]	@ (8000a5c <__libc_init_array+0x40>)
 8000a2e:	4c0c      	ldr	r4, [pc, #48]	@ (8000a60 <__libc_init_array+0x44>)
 8000a30:	f000 fd24 	bl	800147c <_init>
 8000a34:	1b64      	subs	r4, r4, r5
 8000a36:	10a4      	asrs	r4, r4, #2
 8000a38:	2600      	movs	r6, #0
 8000a3a:	42a6      	cmp	r6, r4
 8000a3c:	d105      	bne.n	8000a4a <__libc_init_array+0x2e>
 8000a3e:	bd70      	pop	{r4, r5, r6, pc}
 8000a40:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a44:	4798      	blx	r3
 8000a46:	3601      	adds	r6, #1
 8000a48:	e7ee      	b.n	8000a28 <__libc_init_array+0xc>
 8000a4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4e:	4798      	blx	r3
 8000a50:	3601      	adds	r6, #1
 8000a52:	e7f2      	b.n	8000a3a <__libc_init_array+0x1e>
 8000a54:	0800153c 	.word	0x0800153c
 8000a58:	0800153c 	.word	0x0800153c
 8000a5c:	0800153c 	.word	0x0800153c
 8000a60:	08001540 	.word	0x08001540

08000a64 <__retarget_lock_init_recursive>:
 8000a64:	4770      	bx	lr

08000a66 <__retarget_lock_acquire_recursive>:
 8000a66:	4770      	bx	lr

08000a68 <__retarget_lock_release_recursive>:
 8000a68:	4770      	bx	lr
	...

08000a6c <_free_r>:
 8000a6c:	b538      	push	{r3, r4, r5, lr}
 8000a6e:	4605      	mov	r5, r0
 8000a70:	2900      	cmp	r1, #0
 8000a72:	d041      	beq.n	8000af8 <_free_r+0x8c>
 8000a74:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a78:	1f0c      	subs	r4, r1, #4
 8000a7a:	2b00      	cmp	r3, #0
 8000a7c:	bfb8      	it	lt
 8000a7e:	18e4      	addlt	r4, r4, r3
 8000a80:	f000 f8e0 	bl	8000c44 <__malloc_lock>
 8000a84:	4a1d      	ldr	r2, [pc, #116]	@ (8000afc <_free_r+0x90>)
 8000a86:	6813      	ldr	r3, [r2, #0]
 8000a88:	b933      	cbnz	r3, 8000a98 <_free_r+0x2c>
 8000a8a:	6063      	str	r3, [r4, #4]
 8000a8c:	6014      	str	r4, [r2, #0]
 8000a8e:	4628      	mov	r0, r5
 8000a90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a94:	f000 b8dc 	b.w	8000c50 <__malloc_unlock>
 8000a98:	42a3      	cmp	r3, r4
 8000a9a:	d908      	bls.n	8000aae <_free_r+0x42>
 8000a9c:	6820      	ldr	r0, [r4, #0]
 8000a9e:	1821      	adds	r1, r4, r0
 8000aa0:	428b      	cmp	r3, r1
 8000aa2:	bf01      	itttt	eq
 8000aa4:	6819      	ldreq	r1, [r3, #0]
 8000aa6:	685b      	ldreq	r3, [r3, #4]
 8000aa8:	1809      	addeq	r1, r1, r0
 8000aaa:	6021      	streq	r1, [r4, #0]
 8000aac:	e7ed      	b.n	8000a8a <_free_r+0x1e>
 8000aae:	461a      	mov	r2, r3
 8000ab0:	685b      	ldr	r3, [r3, #4]
 8000ab2:	b10b      	cbz	r3, 8000ab8 <_free_r+0x4c>
 8000ab4:	42a3      	cmp	r3, r4
 8000ab6:	d9fa      	bls.n	8000aae <_free_r+0x42>
 8000ab8:	6811      	ldr	r1, [r2, #0]
 8000aba:	1850      	adds	r0, r2, r1
 8000abc:	42a0      	cmp	r0, r4
 8000abe:	d10b      	bne.n	8000ad8 <_free_r+0x6c>
 8000ac0:	6820      	ldr	r0, [r4, #0]
 8000ac2:	4401      	add	r1, r0
 8000ac4:	1850      	adds	r0, r2, r1
 8000ac6:	4283      	cmp	r3, r0
 8000ac8:	6011      	str	r1, [r2, #0]
 8000aca:	d1e0      	bne.n	8000a8e <_free_r+0x22>
 8000acc:	6818      	ldr	r0, [r3, #0]
 8000ace:	685b      	ldr	r3, [r3, #4]
 8000ad0:	6053      	str	r3, [r2, #4]
 8000ad2:	4408      	add	r0, r1
 8000ad4:	6010      	str	r0, [r2, #0]
 8000ad6:	e7da      	b.n	8000a8e <_free_r+0x22>
 8000ad8:	d902      	bls.n	8000ae0 <_free_r+0x74>
 8000ada:	230c      	movs	r3, #12
 8000adc:	602b      	str	r3, [r5, #0]
 8000ade:	e7d6      	b.n	8000a8e <_free_r+0x22>
 8000ae0:	6820      	ldr	r0, [r4, #0]
 8000ae2:	1821      	adds	r1, r4, r0
 8000ae4:	428b      	cmp	r3, r1
 8000ae6:	bf04      	itt	eq
 8000ae8:	6819      	ldreq	r1, [r3, #0]
 8000aea:	685b      	ldreq	r3, [r3, #4]
 8000aec:	6063      	str	r3, [r4, #4]
 8000aee:	bf04      	itt	eq
 8000af0:	1809      	addeq	r1, r1, r0
 8000af2:	6021      	streq	r1, [r4, #0]
 8000af4:	6054      	str	r4, [r2, #4]
 8000af6:	e7ca      	b.n	8000a8e <_free_r+0x22>
 8000af8:	bd38      	pop	{r3, r4, r5, pc}
 8000afa:	bf00      	nop
 8000afc:	200001c4 	.word	0x200001c4

08000b00 <sbrk_aligned>:
 8000b00:	b570      	push	{r4, r5, r6, lr}
 8000b02:	4e0f      	ldr	r6, [pc, #60]	@ (8000b40 <sbrk_aligned+0x40>)
 8000b04:	460c      	mov	r4, r1
 8000b06:	6831      	ldr	r1, [r6, #0]
 8000b08:	4605      	mov	r5, r0
 8000b0a:	b911      	cbnz	r1, 8000b12 <sbrk_aligned+0x12>
 8000b0c:	f000 fca6 	bl	800145c <_sbrk_r>
 8000b10:	6030      	str	r0, [r6, #0]
 8000b12:	4621      	mov	r1, r4
 8000b14:	4628      	mov	r0, r5
 8000b16:	f000 fca1 	bl	800145c <_sbrk_r>
 8000b1a:	1c43      	adds	r3, r0, #1
 8000b1c:	d103      	bne.n	8000b26 <sbrk_aligned+0x26>
 8000b1e:	f04f 34ff 	mov.w	r4, #4294967295
 8000b22:	4620      	mov	r0, r4
 8000b24:	bd70      	pop	{r4, r5, r6, pc}
 8000b26:	1cc4      	adds	r4, r0, #3
 8000b28:	f024 0403 	bic.w	r4, r4, #3
 8000b2c:	42a0      	cmp	r0, r4
 8000b2e:	d0f8      	beq.n	8000b22 <sbrk_aligned+0x22>
 8000b30:	1a21      	subs	r1, r4, r0
 8000b32:	4628      	mov	r0, r5
 8000b34:	f000 fc92 	bl	800145c <_sbrk_r>
 8000b38:	3001      	adds	r0, #1
 8000b3a:	d1f2      	bne.n	8000b22 <sbrk_aligned+0x22>
 8000b3c:	e7ef      	b.n	8000b1e <sbrk_aligned+0x1e>
 8000b3e:	bf00      	nop
 8000b40:	200001c0 	.word	0x200001c0

08000b44 <_malloc_r>:
 8000b44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b48:	1ccd      	adds	r5, r1, #3
 8000b4a:	f025 0503 	bic.w	r5, r5, #3
 8000b4e:	3508      	adds	r5, #8
 8000b50:	2d0c      	cmp	r5, #12
 8000b52:	bf38      	it	cc
 8000b54:	250c      	movcc	r5, #12
 8000b56:	2d00      	cmp	r5, #0
 8000b58:	4606      	mov	r6, r0
 8000b5a:	db01      	blt.n	8000b60 <_malloc_r+0x1c>
 8000b5c:	42a9      	cmp	r1, r5
 8000b5e:	d904      	bls.n	8000b6a <_malloc_r+0x26>
 8000b60:	230c      	movs	r3, #12
 8000b62:	6033      	str	r3, [r6, #0]
 8000b64:	2000      	movs	r0, #0
 8000b66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b6a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c40 <_malloc_r+0xfc>
 8000b6e:	f000 f869 	bl	8000c44 <__malloc_lock>
 8000b72:	f8d8 3000 	ldr.w	r3, [r8]
 8000b76:	461c      	mov	r4, r3
 8000b78:	bb44      	cbnz	r4, 8000bcc <_malloc_r+0x88>
 8000b7a:	4629      	mov	r1, r5
 8000b7c:	4630      	mov	r0, r6
 8000b7e:	f7ff ffbf 	bl	8000b00 <sbrk_aligned>
 8000b82:	1c43      	adds	r3, r0, #1
 8000b84:	4604      	mov	r4, r0
 8000b86:	d158      	bne.n	8000c3a <_malloc_r+0xf6>
 8000b88:	f8d8 4000 	ldr.w	r4, [r8]
 8000b8c:	4627      	mov	r7, r4
 8000b8e:	2f00      	cmp	r7, #0
 8000b90:	d143      	bne.n	8000c1a <_malloc_r+0xd6>
 8000b92:	2c00      	cmp	r4, #0
 8000b94:	d04b      	beq.n	8000c2e <_malloc_r+0xea>
 8000b96:	6823      	ldr	r3, [r4, #0]
 8000b98:	4639      	mov	r1, r7
 8000b9a:	4630      	mov	r0, r6
 8000b9c:	eb04 0903 	add.w	r9, r4, r3
 8000ba0:	f000 fc5c 	bl	800145c <_sbrk_r>
 8000ba4:	4581      	cmp	r9, r0
 8000ba6:	d142      	bne.n	8000c2e <_malloc_r+0xea>
 8000ba8:	6821      	ldr	r1, [r4, #0]
 8000baa:	1a6d      	subs	r5, r5, r1
 8000bac:	4629      	mov	r1, r5
 8000bae:	4630      	mov	r0, r6
 8000bb0:	f7ff ffa6 	bl	8000b00 <sbrk_aligned>
 8000bb4:	3001      	adds	r0, #1
 8000bb6:	d03a      	beq.n	8000c2e <_malloc_r+0xea>
 8000bb8:	6823      	ldr	r3, [r4, #0]
 8000bba:	442b      	add	r3, r5
 8000bbc:	6023      	str	r3, [r4, #0]
 8000bbe:	f8d8 3000 	ldr.w	r3, [r8]
 8000bc2:	685a      	ldr	r2, [r3, #4]
 8000bc4:	bb62      	cbnz	r2, 8000c20 <_malloc_r+0xdc>
 8000bc6:	f8c8 7000 	str.w	r7, [r8]
 8000bca:	e00f      	b.n	8000bec <_malloc_r+0xa8>
 8000bcc:	6822      	ldr	r2, [r4, #0]
 8000bce:	1b52      	subs	r2, r2, r5
 8000bd0:	d420      	bmi.n	8000c14 <_malloc_r+0xd0>
 8000bd2:	2a0b      	cmp	r2, #11
 8000bd4:	d917      	bls.n	8000c06 <_malloc_r+0xc2>
 8000bd6:	1961      	adds	r1, r4, r5
 8000bd8:	42a3      	cmp	r3, r4
 8000bda:	6025      	str	r5, [r4, #0]
 8000bdc:	bf18      	it	ne
 8000bde:	6059      	strne	r1, [r3, #4]
 8000be0:	6863      	ldr	r3, [r4, #4]
 8000be2:	bf08      	it	eq
 8000be4:	f8c8 1000 	streq.w	r1, [r8]
 8000be8:	5162      	str	r2, [r4, r5]
 8000bea:	604b      	str	r3, [r1, #4]
 8000bec:	4630      	mov	r0, r6
 8000bee:	f000 f82f 	bl	8000c50 <__malloc_unlock>
 8000bf2:	f104 000b 	add.w	r0, r4, #11
 8000bf6:	1d23      	adds	r3, r4, #4
 8000bf8:	f020 0007 	bic.w	r0, r0, #7
 8000bfc:	1ac2      	subs	r2, r0, r3
 8000bfe:	bf1c      	itt	ne
 8000c00:	1a1b      	subne	r3, r3, r0
 8000c02:	50a3      	strne	r3, [r4, r2]
 8000c04:	e7af      	b.n	8000b66 <_malloc_r+0x22>
 8000c06:	6862      	ldr	r2, [r4, #4]
 8000c08:	42a3      	cmp	r3, r4
 8000c0a:	bf0c      	ite	eq
 8000c0c:	f8c8 2000 	streq.w	r2, [r8]
 8000c10:	605a      	strne	r2, [r3, #4]
 8000c12:	e7eb      	b.n	8000bec <_malloc_r+0xa8>
 8000c14:	4623      	mov	r3, r4
 8000c16:	6864      	ldr	r4, [r4, #4]
 8000c18:	e7ae      	b.n	8000b78 <_malloc_r+0x34>
 8000c1a:	463c      	mov	r4, r7
 8000c1c:	687f      	ldr	r7, [r7, #4]
 8000c1e:	e7b6      	b.n	8000b8e <_malloc_r+0x4a>
 8000c20:	461a      	mov	r2, r3
 8000c22:	685b      	ldr	r3, [r3, #4]
 8000c24:	42a3      	cmp	r3, r4
 8000c26:	d1fb      	bne.n	8000c20 <_malloc_r+0xdc>
 8000c28:	2300      	movs	r3, #0
 8000c2a:	6053      	str	r3, [r2, #4]
 8000c2c:	e7de      	b.n	8000bec <_malloc_r+0xa8>
 8000c2e:	230c      	movs	r3, #12
 8000c30:	6033      	str	r3, [r6, #0]
 8000c32:	4630      	mov	r0, r6
 8000c34:	f000 f80c 	bl	8000c50 <__malloc_unlock>
 8000c38:	e794      	b.n	8000b64 <_malloc_r+0x20>
 8000c3a:	6005      	str	r5, [r0, #0]
 8000c3c:	e7d6      	b.n	8000bec <_malloc_r+0xa8>
 8000c3e:	bf00      	nop
 8000c40:	200001c4 	.word	0x200001c4

08000c44 <__malloc_lock>:
 8000c44:	4801      	ldr	r0, [pc, #4]	@ (8000c4c <__malloc_lock+0x8>)
 8000c46:	f7ff bf0e 	b.w	8000a66 <__retarget_lock_acquire_recursive>
 8000c4a:	bf00      	nop
 8000c4c:	200001bc 	.word	0x200001bc

08000c50 <__malloc_unlock>:
 8000c50:	4801      	ldr	r0, [pc, #4]	@ (8000c58 <__malloc_unlock+0x8>)
 8000c52:	f7ff bf09 	b.w	8000a68 <__retarget_lock_release_recursive>
 8000c56:	bf00      	nop
 8000c58:	200001bc 	.word	0x200001bc

08000c5c <__sfputc_r>:
 8000c5c:	6893      	ldr	r3, [r2, #8]
 8000c5e:	3b01      	subs	r3, #1
 8000c60:	2b00      	cmp	r3, #0
 8000c62:	b410      	push	{r4}
 8000c64:	6093      	str	r3, [r2, #8]
 8000c66:	da08      	bge.n	8000c7a <__sfputc_r+0x1e>
 8000c68:	6994      	ldr	r4, [r2, #24]
 8000c6a:	42a3      	cmp	r3, r4
 8000c6c:	db01      	blt.n	8000c72 <__sfputc_r+0x16>
 8000c6e:	290a      	cmp	r1, #10
 8000c70:	d103      	bne.n	8000c7a <__sfputc_r+0x1e>
 8000c72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c76:	f7ff bde8 	b.w	800084a <__swbuf_r>
 8000c7a:	6813      	ldr	r3, [r2, #0]
 8000c7c:	1c58      	adds	r0, r3, #1
 8000c7e:	6010      	str	r0, [r2, #0]
 8000c80:	7019      	strb	r1, [r3, #0]
 8000c82:	4608      	mov	r0, r1
 8000c84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c88:	4770      	bx	lr

08000c8a <__sfputs_r>:
 8000c8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c8c:	4606      	mov	r6, r0
 8000c8e:	460f      	mov	r7, r1
 8000c90:	4614      	mov	r4, r2
 8000c92:	18d5      	adds	r5, r2, r3
 8000c94:	42ac      	cmp	r4, r5
 8000c96:	d101      	bne.n	8000c9c <__sfputs_r+0x12>
 8000c98:	2000      	movs	r0, #0
 8000c9a:	e007      	b.n	8000cac <__sfputs_r+0x22>
 8000c9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ca0:	463a      	mov	r2, r7
 8000ca2:	4630      	mov	r0, r6
 8000ca4:	f7ff ffda 	bl	8000c5c <__sfputc_r>
 8000ca8:	1c43      	adds	r3, r0, #1
 8000caa:	d1f3      	bne.n	8000c94 <__sfputs_r+0xa>
 8000cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cb0 <_vfiprintf_r>:
 8000cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cb4:	460d      	mov	r5, r1
 8000cb6:	b09d      	sub	sp, #116	@ 0x74
 8000cb8:	4614      	mov	r4, r2
 8000cba:	4698      	mov	r8, r3
 8000cbc:	4606      	mov	r6, r0
 8000cbe:	b118      	cbz	r0, 8000cc8 <_vfiprintf_r+0x18>
 8000cc0:	6a03      	ldr	r3, [r0, #32]
 8000cc2:	b90b      	cbnz	r3, 8000cc8 <_vfiprintf_r+0x18>
 8000cc4:	f7ff fcd8 	bl	8000678 <__sinit>
 8000cc8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cca:	07d9      	lsls	r1, r3, #31
 8000ccc:	d405      	bmi.n	8000cda <_vfiprintf_r+0x2a>
 8000cce:	89ab      	ldrh	r3, [r5, #12]
 8000cd0:	059a      	lsls	r2, r3, #22
 8000cd2:	d402      	bmi.n	8000cda <_vfiprintf_r+0x2a>
 8000cd4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cd6:	f7ff fec6 	bl	8000a66 <__retarget_lock_acquire_recursive>
 8000cda:	89ab      	ldrh	r3, [r5, #12]
 8000cdc:	071b      	lsls	r3, r3, #28
 8000cde:	d501      	bpl.n	8000ce4 <_vfiprintf_r+0x34>
 8000ce0:	692b      	ldr	r3, [r5, #16]
 8000ce2:	b99b      	cbnz	r3, 8000d0c <_vfiprintf_r+0x5c>
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	4630      	mov	r0, r6
 8000ce8:	f7ff fdee 	bl	80008c8 <__swsetup_r>
 8000cec:	b170      	cbz	r0, 8000d0c <_vfiprintf_r+0x5c>
 8000cee:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cf0:	07dc      	lsls	r4, r3, #31
 8000cf2:	d504      	bpl.n	8000cfe <_vfiprintf_r+0x4e>
 8000cf4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cf8:	b01d      	add	sp, #116	@ 0x74
 8000cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cfe:	89ab      	ldrh	r3, [r5, #12]
 8000d00:	0598      	lsls	r0, r3, #22
 8000d02:	d4f7      	bmi.n	8000cf4 <_vfiprintf_r+0x44>
 8000d04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d06:	f7ff feaf 	bl	8000a68 <__retarget_lock_release_recursive>
 8000d0a:	e7f3      	b.n	8000cf4 <_vfiprintf_r+0x44>
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d10:	2320      	movs	r3, #32
 8000d12:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d16:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d1a:	2330      	movs	r3, #48	@ 0x30
 8000d1c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ecc <_vfiprintf_r+0x21c>
 8000d20:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d24:	f04f 0901 	mov.w	r9, #1
 8000d28:	4623      	mov	r3, r4
 8000d2a:	469a      	mov	sl, r3
 8000d2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d30:	b10a      	cbz	r2, 8000d36 <_vfiprintf_r+0x86>
 8000d32:	2a25      	cmp	r2, #37	@ 0x25
 8000d34:	d1f9      	bne.n	8000d2a <_vfiprintf_r+0x7a>
 8000d36:	ebba 0b04 	subs.w	fp, sl, r4
 8000d3a:	d00b      	beq.n	8000d54 <_vfiprintf_r+0xa4>
 8000d3c:	465b      	mov	r3, fp
 8000d3e:	4622      	mov	r2, r4
 8000d40:	4629      	mov	r1, r5
 8000d42:	4630      	mov	r0, r6
 8000d44:	f7ff ffa1 	bl	8000c8a <__sfputs_r>
 8000d48:	3001      	adds	r0, #1
 8000d4a:	f000 80a7 	beq.w	8000e9c <_vfiprintf_r+0x1ec>
 8000d4e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d50:	445a      	add	r2, fp
 8000d52:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d54:	f89a 3000 	ldrb.w	r3, [sl]
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	f000 809f 	beq.w	8000e9c <_vfiprintf_r+0x1ec>
 8000d5e:	2300      	movs	r3, #0
 8000d60:	f04f 32ff 	mov.w	r2, #4294967295
 8000d64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d68:	f10a 0a01 	add.w	sl, sl, #1
 8000d6c:	9304      	str	r3, [sp, #16]
 8000d6e:	9307      	str	r3, [sp, #28]
 8000d70:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d74:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d76:	4654      	mov	r4, sl
 8000d78:	2205      	movs	r2, #5
 8000d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d7e:	4853      	ldr	r0, [pc, #332]	@ (8000ecc <_vfiprintf_r+0x21c>)
 8000d80:	f7ff fa46 	bl	8000210 <memchr>
 8000d84:	9a04      	ldr	r2, [sp, #16]
 8000d86:	b9d8      	cbnz	r0, 8000dc0 <_vfiprintf_r+0x110>
 8000d88:	06d1      	lsls	r1, r2, #27
 8000d8a:	bf44      	itt	mi
 8000d8c:	2320      	movmi	r3, #32
 8000d8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d92:	0713      	lsls	r3, r2, #28
 8000d94:	bf44      	itt	mi
 8000d96:	232b      	movmi	r3, #43	@ 0x2b
 8000d98:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8000da0:	2b2a      	cmp	r3, #42	@ 0x2a
 8000da2:	d015      	beq.n	8000dd0 <_vfiprintf_r+0x120>
 8000da4:	9a07      	ldr	r2, [sp, #28]
 8000da6:	4654      	mov	r4, sl
 8000da8:	2000      	movs	r0, #0
 8000daa:	f04f 0c0a 	mov.w	ip, #10
 8000dae:	4621      	mov	r1, r4
 8000db0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000db4:	3b30      	subs	r3, #48	@ 0x30
 8000db6:	2b09      	cmp	r3, #9
 8000db8:	d94b      	bls.n	8000e52 <_vfiprintf_r+0x1a2>
 8000dba:	b1b0      	cbz	r0, 8000dea <_vfiprintf_r+0x13a>
 8000dbc:	9207      	str	r2, [sp, #28]
 8000dbe:	e014      	b.n	8000dea <_vfiprintf_r+0x13a>
 8000dc0:	eba0 0308 	sub.w	r3, r0, r8
 8000dc4:	fa09 f303 	lsl.w	r3, r9, r3
 8000dc8:	4313      	orrs	r3, r2
 8000dca:	9304      	str	r3, [sp, #16]
 8000dcc:	46a2      	mov	sl, r4
 8000dce:	e7d2      	b.n	8000d76 <_vfiprintf_r+0xc6>
 8000dd0:	9b03      	ldr	r3, [sp, #12]
 8000dd2:	1d19      	adds	r1, r3, #4
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	9103      	str	r1, [sp, #12]
 8000dd8:	2b00      	cmp	r3, #0
 8000dda:	bfbb      	ittet	lt
 8000ddc:	425b      	neglt	r3, r3
 8000dde:	f042 0202 	orrlt.w	r2, r2, #2
 8000de2:	9307      	strge	r3, [sp, #28]
 8000de4:	9307      	strlt	r3, [sp, #28]
 8000de6:	bfb8      	it	lt
 8000de8:	9204      	strlt	r2, [sp, #16]
 8000dea:	7823      	ldrb	r3, [r4, #0]
 8000dec:	2b2e      	cmp	r3, #46	@ 0x2e
 8000dee:	d10a      	bne.n	8000e06 <_vfiprintf_r+0x156>
 8000df0:	7863      	ldrb	r3, [r4, #1]
 8000df2:	2b2a      	cmp	r3, #42	@ 0x2a
 8000df4:	d132      	bne.n	8000e5c <_vfiprintf_r+0x1ac>
 8000df6:	9b03      	ldr	r3, [sp, #12]
 8000df8:	1d1a      	adds	r2, r3, #4
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	9203      	str	r2, [sp, #12]
 8000dfe:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e02:	3402      	adds	r4, #2
 8000e04:	9305      	str	r3, [sp, #20]
 8000e06:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000edc <_vfiprintf_r+0x22c>
 8000e0a:	7821      	ldrb	r1, [r4, #0]
 8000e0c:	2203      	movs	r2, #3
 8000e0e:	4650      	mov	r0, sl
 8000e10:	f7ff f9fe 	bl	8000210 <memchr>
 8000e14:	b138      	cbz	r0, 8000e26 <_vfiprintf_r+0x176>
 8000e16:	9b04      	ldr	r3, [sp, #16]
 8000e18:	eba0 000a 	sub.w	r0, r0, sl
 8000e1c:	2240      	movs	r2, #64	@ 0x40
 8000e1e:	4082      	lsls	r2, r0
 8000e20:	4313      	orrs	r3, r2
 8000e22:	3401      	adds	r4, #1
 8000e24:	9304      	str	r3, [sp, #16]
 8000e26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e2a:	4829      	ldr	r0, [pc, #164]	@ (8000ed0 <_vfiprintf_r+0x220>)
 8000e2c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e30:	2206      	movs	r2, #6
 8000e32:	f7ff f9ed 	bl	8000210 <memchr>
 8000e36:	2800      	cmp	r0, #0
 8000e38:	d03f      	beq.n	8000eba <_vfiprintf_r+0x20a>
 8000e3a:	4b26      	ldr	r3, [pc, #152]	@ (8000ed4 <_vfiprintf_r+0x224>)
 8000e3c:	bb1b      	cbnz	r3, 8000e86 <_vfiprintf_r+0x1d6>
 8000e3e:	9b03      	ldr	r3, [sp, #12]
 8000e40:	3307      	adds	r3, #7
 8000e42:	f023 0307 	bic.w	r3, r3, #7
 8000e46:	3308      	adds	r3, #8
 8000e48:	9303      	str	r3, [sp, #12]
 8000e4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e4c:	443b      	add	r3, r7
 8000e4e:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e50:	e76a      	b.n	8000d28 <_vfiprintf_r+0x78>
 8000e52:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e56:	460c      	mov	r4, r1
 8000e58:	2001      	movs	r0, #1
 8000e5a:	e7a8      	b.n	8000dae <_vfiprintf_r+0xfe>
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	3401      	adds	r4, #1
 8000e60:	9305      	str	r3, [sp, #20]
 8000e62:	4619      	mov	r1, r3
 8000e64:	f04f 0c0a 	mov.w	ip, #10
 8000e68:	4620      	mov	r0, r4
 8000e6a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e6e:	3a30      	subs	r2, #48	@ 0x30
 8000e70:	2a09      	cmp	r2, #9
 8000e72:	d903      	bls.n	8000e7c <_vfiprintf_r+0x1cc>
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d0c6      	beq.n	8000e06 <_vfiprintf_r+0x156>
 8000e78:	9105      	str	r1, [sp, #20]
 8000e7a:	e7c4      	b.n	8000e06 <_vfiprintf_r+0x156>
 8000e7c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e80:	4604      	mov	r4, r0
 8000e82:	2301      	movs	r3, #1
 8000e84:	e7f0      	b.n	8000e68 <_vfiprintf_r+0x1b8>
 8000e86:	ab03      	add	r3, sp, #12
 8000e88:	9300      	str	r3, [sp, #0]
 8000e8a:	462a      	mov	r2, r5
 8000e8c:	4b12      	ldr	r3, [pc, #72]	@ (8000ed8 <_vfiprintf_r+0x228>)
 8000e8e:	a904      	add	r1, sp, #16
 8000e90:	4630      	mov	r0, r6
 8000e92:	f3af 8000 	nop.w
 8000e96:	4607      	mov	r7, r0
 8000e98:	1c78      	adds	r0, r7, #1
 8000e9a:	d1d6      	bne.n	8000e4a <_vfiprintf_r+0x19a>
 8000e9c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e9e:	07d9      	lsls	r1, r3, #31
 8000ea0:	d405      	bmi.n	8000eae <_vfiprintf_r+0x1fe>
 8000ea2:	89ab      	ldrh	r3, [r5, #12]
 8000ea4:	059a      	lsls	r2, r3, #22
 8000ea6:	d402      	bmi.n	8000eae <_vfiprintf_r+0x1fe>
 8000ea8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000eaa:	f7ff fddd 	bl	8000a68 <__retarget_lock_release_recursive>
 8000eae:	89ab      	ldrh	r3, [r5, #12]
 8000eb0:	065b      	lsls	r3, r3, #25
 8000eb2:	f53f af1f 	bmi.w	8000cf4 <_vfiprintf_r+0x44>
 8000eb6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000eb8:	e71e      	b.n	8000cf8 <_vfiprintf_r+0x48>
 8000eba:	ab03      	add	r3, sp, #12
 8000ebc:	9300      	str	r3, [sp, #0]
 8000ebe:	462a      	mov	r2, r5
 8000ec0:	4b05      	ldr	r3, [pc, #20]	@ (8000ed8 <_vfiprintf_r+0x228>)
 8000ec2:	a904      	add	r1, sp, #16
 8000ec4:	4630      	mov	r0, r6
 8000ec6:	f000 f879 	bl	8000fbc <_printf_i>
 8000eca:	e7e4      	b.n	8000e96 <_vfiprintf_r+0x1e6>
 8000ecc:	08001500 	.word	0x08001500
 8000ed0:	0800150a 	.word	0x0800150a
 8000ed4:	00000000 	.word	0x00000000
 8000ed8:	08000c8b 	.word	0x08000c8b
 8000edc:	08001506 	.word	0x08001506

08000ee0 <_printf_common>:
 8000ee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ee4:	4616      	mov	r6, r2
 8000ee6:	4698      	mov	r8, r3
 8000ee8:	688a      	ldr	r2, [r1, #8]
 8000eea:	690b      	ldr	r3, [r1, #16]
 8000eec:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ef0:	4293      	cmp	r3, r2
 8000ef2:	bfb8      	it	lt
 8000ef4:	4613      	movlt	r3, r2
 8000ef6:	6033      	str	r3, [r6, #0]
 8000ef8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000efc:	4607      	mov	r7, r0
 8000efe:	460c      	mov	r4, r1
 8000f00:	b10a      	cbz	r2, 8000f06 <_printf_common+0x26>
 8000f02:	3301      	adds	r3, #1
 8000f04:	6033      	str	r3, [r6, #0]
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	0699      	lsls	r1, r3, #26
 8000f0a:	bf42      	ittt	mi
 8000f0c:	6833      	ldrmi	r3, [r6, #0]
 8000f0e:	3302      	addmi	r3, #2
 8000f10:	6033      	strmi	r3, [r6, #0]
 8000f12:	6825      	ldr	r5, [r4, #0]
 8000f14:	f015 0506 	ands.w	r5, r5, #6
 8000f18:	d106      	bne.n	8000f28 <_printf_common+0x48>
 8000f1a:	f104 0a19 	add.w	sl, r4, #25
 8000f1e:	68e3      	ldr	r3, [r4, #12]
 8000f20:	6832      	ldr	r2, [r6, #0]
 8000f22:	1a9b      	subs	r3, r3, r2
 8000f24:	42ab      	cmp	r3, r5
 8000f26:	dc26      	bgt.n	8000f76 <_printf_common+0x96>
 8000f28:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f2c:	6822      	ldr	r2, [r4, #0]
 8000f2e:	3b00      	subs	r3, #0
 8000f30:	bf18      	it	ne
 8000f32:	2301      	movne	r3, #1
 8000f34:	0692      	lsls	r2, r2, #26
 8000f36:	d42b      	bmi.n	8000f90 <_printf_common+0xb0>
 8000f38:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4638      	mov	r0, r7
 8000f40:	47c8      	blx	r9
 8000f42:	3001      	adds	r0, #1
 8000f44:	d01e      	beq.n	8000f84 <_printf_common+0xa4>
 8000f46:	6823      	ldr	r3, [r4, #0]
 8000f48:	6922      	ldr	r2, [r4, #16]
 8000f4a:	f003 0306 	and.w	r3, r3, #6
 8000f4e:	2b04      	cmp	r3, #4
 8000f50:	bf02      	ittt	eq
 8000f52:	68e5      	ldreq	r5, [r4, #12]
 8000f54:	6833      	ldreq	r3, [r6, #0]
 8000f56:	1aed      	subeq	r5, r5, r3
 8000f58:	68a3      	ldr	r3, [r4, #8]
 8000f5a:	bf0c      	ite	eq
 8000f5c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f60:	2500      	movne	r5, #0
 8000f62:	4293      	cmp	r3, r2
 8000f64:	bfc4      	itt	gt
 8000f66:	1a9b      	subgt	r3, r3, r2
 8000f68:	18ed      	addgt	r5, r5, r3
 8000f6a:	2600      	movs	r6, #0
 8000f6c:	341a      	adds	r4, #26
 8000f6e:	42b5      	cmp	r5, r6
 8000f70:	d11a      	bne.n	8000fa8 <_printf_common+0xc8>
 8000f72:	2000      	movs	r0, #0
 8000f74:	e008      	b.n	8000f88 <_printf_common+0xa8>
 8000f76:	2301      	movs	r3, #1
 8000f78:	4652      	mov	r2, sl
 8000f7a:	4641      	mov	r1, r8
 8000f7c:	4638      	mov	r0, r7
 8000f7e:	47c8      	blx	r9
 8000f80:	3001      	adds	r0, #1
 8000f82:	d103      	bne.n	8000f8c <_printf_common+0xac>
 8000f84:	f04f 30ff 	mov.w	r0, #4294967295
 8000f88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f8c:	3501      	adds	r5, #1
 8000f8e:	e7c6      	b.n	8000f1e <_printf_common+0x3e>
 8000f90:	18e1      	adds	r1, r4, r3
 8000f92:	1c5a      	adds	r2, r3, #1
 8000f94:	2030      	movs	r0, #48	@ 0x30
 8000f96:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000f9a:	4422      	add	r2, r4
 8000f9c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fa0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fa4:	3302      	adds	r3, #2
 8000fa6:	e7c7      	b.n	8000f38 <_printf_common+0x58>
 8000fa8:	2301      	movs	r3, #1
 8000faa:	4622      	mov	r2, r4
 8000fac:	4641      	mov	r1, r8
 8000fae:	4638      	mov	r0, r7
 8000fb0:	47c8      	blx	r9
 8000fb2:	3001      	adds	r0, #1
 8000fb4:	d0e6      	beq.n	8000f84 <_printf_common+0xa4>
 8000fb6:	3601      	adds	r6, #1
 8000fb8:	e7d9      	b.n	8000f6e <_printf_common+0x8e>
	...

08000fbc <_printf_i>:
 8000fbc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fc0:	7e0f      	ldrb	r7, [r1, #24]
 8000fc2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fc4:	2f78      	cmp	r7, #120	@ 0x78
 8000fc6:	4691      	mov	r9, r2
 8000fc8:	4680      	mov	r8, r0
 8000fca:	460c      	mov	r4, r1
 8000fcc:	469a      	mov	sl, r3
 8000fce:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000fd2:	d807      	bhi.n	8000fe4 <_printf_i+0x28>
 8000fd4:	2f62      	cmp	r7, #98	@ 0x62
 8000fd6:	d80a      	bhi.n	8000fee <_printf_i+0x32>
 8000fd8:	2f00      	cmp	r7, #0
 8000fda:	f000 80d2 	beq.w	8001182 <_printf_i+0x1c6>
 8000fde:	2f58      	cmp	r7, #88	@ 0x58
 8000fe0:	f000 80b9 	beq.w	8001156 <_printf_i+0x19a>
 8000fe4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000fe8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000fec:	e03a      	b.n	8001064 <_printf_i+0xa8>
 8000fee:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000ff2:	2b15      	cmp	r3, #21
 8000ff4:	d8f6      	bhi.n	8000fe4 <_printf_i+0x28>
 8000ff6:	a101      	add	r1, pc, #4	@ (adr r1, 8000ffc <_printf_i+0x40>)
 8000ff8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ffc:	08001055 	.word	0x08001055
 8001000:	08001069 	.word	0x08001069
 8001004:	08000fe5 	.word	0x08000fe5
 8001008:	08000fe5 	.word	0x08000fe5
 800100c:	08000fe5 	.word	0x08000fe5
 8001010:	08000fe5 	.word	0x08000fe5
 8001014:	08001069 	.word	0x08001069
 8001018:	08000fe5 	.word	0x08000fe5
 800101c:	08000fe5 	.word	0x08000fe5
 8001020:	08000fe5 	.word	0x08000fe5
 8001024:	08000fe5 	.word	0x08000fe5
 8001028:	08001169 	.word	0x08001169
 800102c:	08001093 	.word	0x08001093
 8001030:	08001123 	.word	0x08001123
 8001034:	08000fe5 	.word	0x08000fe5
 8001038:	08000fe5 	.word	0x08000fe5
 800103c:	0800118b 	.word	0x0800118b
 8001040:	08000fe5 	.word	0x08000fe5
 8001044:	08001093 	.word	0x08001093
 8001048:	08000fe5 	.word	0x08000fe5
 800104c:	08000fe5 	.word	0x08000fe5
 8001050:	0800112b 	.word	0x0800112b
 8001054:	6833      	ldr	r3, [r6, #0]
 8001056:	1d1a      	adds	r2, r3, #4
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	6032      	str	r2, [r6, #0]
 800105c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001060:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001064:	2301      	movs	r3, #1
 8001066:	e09d      	b.n	80011a4 <_printf_i+0x1e8>
 8001068:	6833      	ldr	r3, [r6, #0]
 800106a:	6820      	ldr	r0, [r4, #0]
 800106c:	1d19      	adds	r1, r3, #4
 800106e:	6031      	str	r1, [r6, #0]
 8001070:	0606      	lsls	r6, r0, #24
 8001072:	d501      	bpl.n	8001078 <_printf_i+0xbc>
 8001074:	681d      	ldr	r5, [r3, #0]
 8001076:	e003      	b.n	8001080 <_printf_i+0xc4>
 8001078:	0645      	lsls	r5, r0, #25
 800107a:	d5fb      	bpl.n	8001074 <_printf_i+0xb8>
 800107c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001080:	2d00      	cmp	r5, #0
 8001082:	da03      	bge.n	800108c <_printf_i+0xd0>
 8001084:	232d      	movs	r3, #45	@ 0x2d
 8001086:	426d      	negs	r5, r5
 8001088:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800108c:	4859      	ldr	r0, [pc, #356]	@ (80011f4 <_printf_i+0x238>)
 800108e:	230a      	movs	r3, #10
 8001090:	e011      	b.n	80010b6 <_printf_i+0xfa>
 8001092:	6821      	ldr	r1, [r4, #0]
 8001094:	6833      	ldr	r3, [r6, #0]
 8001096:	0608      	lsls	r0, r1, #24
 8001098:	f853 5b04 	ldr.w	r5, [r3], #4
 800109c:	d402      	bmi.n	80010a4 <_printf_i+0xe8>
 800109e:	0649      	lsls	r1, r1, #25
 80010a0:	bf48      	it	mi
 80010a2:	b2ad      	uxthmi	r5, r5
 80010a4:	2f6f      	cmp	r7, #111	@ 0x6f
 80010a6:	4853      	ldr	r0, [pc, #332]	@ (80011f4 <_printf_i+0x238>)
 80010a8:	6033      	str	r3, [r6, #0]
 80010aa:	bf14      	ite	ne
 80010ac:	230a      	movne	r3, #10
 80010ae:	2308      	moveq	r3, #8
 80010b0:	2100      	movs	r1, #0
 80010b2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010b6:	6866      	ldr	r6, [r4, #4]
 80010b8:	60a6      	str	r6, [r4, #8]
 80010ba:	2e00      	cmp	r6, #0
 80010bc:	bfa2      	ittt	ge
 80010be:	6821      	ldrge	r1, [r4, #0]
 80010c0:	f021 0104 	bicge.w	r1, r1, #4
 80010c4:	6021      	strge	r1, [r4, #0]
 80010c6:	b90d      	cbnz	r5, 80010cc <_printf_i+0x110>
 80010c8:	2e00      	cmp	r6, #0
 80010ca:	d04b      	beq.n	8001164 <_printf_i+0x1a8>
 80010cc:	4616      	mov	r6, r2
 80010ce:	fbb5 f1f3 	udiv	r1, r5, r3
 80010d2:	fb03 5711 	mls	r7, r3, r1, r5
 80010d6:	5dc7      	ldrb	r7, [r0, r7]
 80010d8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80010dc:	462f      	mov	r7, r5
 80010de:	42bb      	cmp	r3, r7
 80010e0:	460d      	mov	r5, r1
 80010e2:	d9f4      	bls.n	80010ce <_printf_i+0x112>
 80010e4:	2b08      	cmp	r3, #8
 80010e6:	d10b      	bne.n	8001100 <_printf_i+0x144>
 80010e8:	6823      	ldr	r3, [r4, #0]
 80010ea:	07df      	lsls	r7, r3, #31
 80010ec:	d508      	bpl.n	8001100 <_printf_i+0x144>
 80010ee:	6923      	ldr	r3, [r4, #16]
 80010f0:	6861      	ldr	r1, [r4, #4]
 80010f2:	4299      	cmp	r1, r3
 80010f4:	bfde      	ittt	le
 80010f6:	2330      	movle	r3, #48	@ 0x30
 80010f8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80010fc:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001100:	1b92      	subs	r2, r2, r6
 8001102:	6122      	str	r2, [r4, #16]
 8001104:	f8cd a000 	str.w	sl, [sp]
 8001108:	464b      	mov	r3, r9
 800110a:	aa03      	add	r2, sp, #12
 800110c:	4621      	mov	r1, r4
 800110e:	4640      	mov	r0, r8
 8001110:	f7ff fee6 	bl	8000ee0 <_printf_common>
 8001114:	3001      	adds	r0, #1
 8001116:	d14a      	bne.n	80011ae <_printf_i+0x1f2>
 8001118:	f04f 30ff 	mov.w	r0, #4294967295
 800111c:	b004      	add	sp, #16
 800111e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001122:	6823      	ldr	r3, [r4, #0]
 8001124:	f043 0320 	orr.w	r3, r3, #32
 8001128:	6023      	str	r3, [r4, #0]
 800112a:	4833      	ldr	r0, [pc, #204]	@ (80011f8 <_printf_i+0x23c>)
 800112c:	2778      	movs	r7, #120	@ 0x78
 800112e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001132:	6823      	ldr	r3, [r4, #0]
 8001134:	6831      	ldr	r1, [r6, #0]
 8001136:	061f      	lsls	r7, r3, #24
 8001138:	f851 5b04 	ldr.w	r5, [r1], #4
 800113c:	d402      	bmi.n	8001144 <_printf_i+0x188>
 800113e:	065f      	lsls	r7, r3, #25
 8001140:	bf48      	it	mi
 8001142:	b2ad      	uxthmi	r5, r5
 8001144:	6031      	str	r1, [r6, #0]
 8001146:	07d9      	lsls	r1, r3, #31
 8001148:	bf44      	itt	mi
 800114a:	f043 0320 	orrmi.w	r3, r3, #32
 800114e:	6023      	strmi	r3, [r4, #0]
 8001150:	b11d      	cbz	r5, 800115a <_printf_i+0x19e>
 8001152:	2310      	movs	r3, #16
 8001154:	e7ac      	b.n	80010b0 <_printf_i+0xf4>
 8001156:	4827      	ldr	r0, [pc, #156]	@ (80011f4 <_printf_i+0x238>)
 8001158:	e7e9      	b.n	800112e <_printf_i+0x172>
 800115a:	6823      	ldr	r3, [r4, #0]
 800115c:	f023 0320 	bic.w	r3, r3, #32
 8001160:	6023      	str	r3, [r4, #0]
 8001162:	e7f6      	b.n	8001152 <_printf_i+0x196>
 8001164:	4616      	mov	r6, r2
 8001166:	e7bd      	b.n	80010e4 <_printf_i+0x128>
 8001168:	6833      	ldr	r3, [r6, #0]
 800116a:	6825      	ldr	r5, [r4, #0]
 800116c:	6961      	ldr	r1, [r4, #20]
 800116e:	1d18      	adds	r0, r3, #4
 8001170:	6030      	str	r0, [r6, #0]
 8001172:	062e      	lsls	r6, r5, #24
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	d501      	bpl.n	800117c <_printf_i+0x1c0>
 8001178:	6019      	str	r1, [r3, #0]
 800117a:	e002      	b.n	8001182 <_printf_i+0x1c6>
 800117c:	0668      	lsls	r0, r5, #25
 800117e:	d5fb      	bpl.n	8001178 <_printf_i+0x1bc>
 8001180:	8019      	strh	r1, [r3, #0]
 8001182:	2300      	movs	r3, #0
 8001184:	6123      	str	r3, [r4, #16]
 8001186:	4616      	mov	r6, r2
 8001188:	e7bc      	b.n	8001104 <_printf_i+0x148>
 800118a:	6833      	ldr	r3, [r6, #0]
 800118c:	1d1a      	adds	r2, r3, #4
 800118e:	6032      	str	r2, [r6, #0]
 8001190:	681e      	ldr	r6, [r3, #0]
 8001192:	6862      	ldr	r2, [r4, #4]
 8001194:	2100      	movs	r1, #0
 8001196:	4630      	mov	r0, r6
 8001198:	f7ff f83a 	bl	8000210 <memchr>
 800119c:	b108      	cbz	r0, 80011a2 <_printf_i+0x1e6>
 800119e:	1b80      	subs	r0, r0, r6
 80011a0:	6060      	str	r0, [r4, #4]
 80011a2:	6863      	ldr	r3, [r4, #4]
 80011a4:	6123      	str	r3, [r4, #16]
 80011a6:	2300      	movs	r3, #0
 80011a8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011ac:	e7aa      	b.n	8001104 <_printf_i+0x148>
 80011ae:	6923      	ldr	r3, [r4, #16]
 80011b0:	4632      	mov	r2, r6
 80011b2:	4649      	mov	r1, r9
 80011b4:	4640      	mov	r0, r8
 80011b6:	47d0      	blx	sl
 80011b8:	3001      	adds	r0, #1
 80011ba:	d0ad      	beq.n	8001118 <_printf_i+0x15c>
 80011bc:	6823      	ldr	r3, [r4, #0]
 80011be:	079b      	lsls	r3, r3, #30
 80011c0:	d413      	bmi.n	80011ea <_printf_i+0x22e>
 80011c2:	68e0      	ldr	r0, [r4, #12]
 80011c4:	9b03      	ldr	r3, [sp, #12]
 80011c6:	4298      	cmp	r0, r3
 80011c8:	bfb8      	it	lt
 80011ca:	4618      	movlt	r0, r3
 80011cc:	e7a6      	b.n	800111c <_printf_i+0x160>
 80011ce:	2301      	movs	r3, #1
 80011d0:	4632      	mov	r2, r6
 80011d2:	4649      	mov	r1, r9
 80011d4:	4640      	mov	r0, r8
 80011d6:	47d0      	blx	sl
 80011d8:	3001      	adds	r0, #1
 80011da:	d09d      	beq.n	8001118 <_printf_i+0x15c>
 80011dc:	3501      	adds	r5, #1
 80011de:	68e3      	ldr	r3, [r4, #12]
 80011e0:	9903      	ldr	r1, [sp, #12]
 80011e2:	1a5b      	subs	r3, r3, r1
 80011e4:	42ab      	cmp	r3, r5
 80011e6:	dcf2      	bgt.n	80011ce <_printf_i+0x212>
 80011e8:	e7eb      	b.n	80011c2 <_printf_i+0x206>
 80011ea:	2500      	movs	r5, #0
 80011ec:	f104 0619 	add.w	r6, r4, #25
 80011f0:	e7f5      	b.n	80011de <_printf_i+0x222>
 80011f2:	bf00      	nop
 80011f4:	08001511 	.word	0x08001511
 80011f8:	08001522 	.word	0x08001522

080011fc <__sflush_r>:
 80011fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001204:	0716      	lsls	r6, r2, #28
 8001206:	4605      	mov	r5, r0
 8001208:	460c      	mov	r4, r1
 800120a:	d454      	bmi.n	80012b6 <__sflush_r+0xba>
 800120c:	684b      	ldr	r3, [r1, #4]
 800120e:	2b00      	cmp	r3, #0
 8001210:	dc02      	bgt.n	8001218 <__sflush_r+0x1c>
 8001212:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001214:	2b00      	cmp	r3, #0
 8001216:	dd48      	ble.n	80012aa <__sflush_r+0xae>
 8001218:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800121a:	2e00      	cmp	r6, #0
 800121c:	d045      	beq.n	80012aa <__sflush_r+0xae>
 800121e:	2300      	movs	r3, #0
 8001220:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001224:	682f      	ldr	r7, [r5, #0]
 8001226:	6a21      	ldr	r1, [r4, #32]
 8001228:	602b      	str	r3, [r5, #0]
 800122a:	d030      	beq.n	800128e <__sflush_r+0x92>
 800122c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800122e:	89a3      	ldrh	r3, [r4, #12]
 8001230:	0759      	lsls	r1, r3, #29
 8001232:	d505      	bpl.n	8001240 <__sflush_r+0x44>
 8001234:	6863      	ldr	r3, [r4, #4]
 8001236:	1ad2      	subs	r2, r2, r3
 8001238:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800123a:	b10b      	cbz	r3, 8001240 <__sflush_r+0x44>
 800123c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800123e:	1ad2      	subs	r2, r2, r3
 8001240:	2300      	movs	r3, #0
 8001242:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001244:	6a21      	ldr	r1, [r4, #32]
 8001246:	4628      	mov	r0, r5
 8001248:	47b0      	blx	r6
 800124a:	1c43      	adds	r3, r0, #1
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	d106      	bne.n	800125e <__sflush_r+0x62>
 8001250:	6829      	ldr	r1, [r5, #0]
 8001252:	291d      	cmp	r1, #29
 8001254:	d82b      	bhi.n	80012ae <__sflush_r+0xb2>
 8001256:	4a2a      	ldr	r2, [pc, #168]	@ (8001300 <__sflush_r+0x104>)
 8001258:	410a      	asrs	r2, r1
 800125a:	07d6      	lsls	r6, r2, #31
 800125c:	d427      	bmi.n	80012ae <__sflush_r+0xb2>
 800125e:	2200      	movs	r2, #0
 8001260:	6062      	str	r2, [r4, #4]
 8001262:	04d9      	lsls	r1, r3, #19
 8001264:	6922      	ldr	r2, [r4, #16]
 8001266:	6022      	str	r2, [r4, #0]
 8001268:	d504      	bpl.n	8001274 <__sflush_r+0x78>
 800126a:	1c42      	adds	r2, r0, #1
 800126c:	d101      	bne.n	8001272 <__sflush_r+0x76>
 800126e:	682b      	ldr	r3, [r5, #0]
 8001270:	b903      	cbnz	r3, 8001274 <__sflush_r+0x78>
 8001272:	6560      	str	r0, [r4, #84]	@ 0x54
 8001274:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001276:	602f      	str	r7, [r5, #0]
 8001278:	b1b9      	cbz	r1, 80012aa <__sflush_r+0xae>
 800127a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800127e:	4299      	cmp	r1, r3
 8001280:	d002      	beq.n	8001288 <__sflush_r+0x8c>
 8001282:	4628      	mov	r0, r5
 8001284:	f7ff fbf2 	bl	8000a6c <_free_r>
 8001288:	2300      	movs	r3, #0
 800128a:	6363      	str	r3, [r4, #52]	@ 0x34
 800128c:	e00d      	b.n	80012aa <__sflush_r+0xae>
 800128e:	2301      	movs	r3, #1
 8001290:	4628      	mov	r0, r5
 8001292:	47b0      	blx	r6
 8001294:	4602      	mov	r2, r0
 8001296:	1c50      	adds	r0, r2, #1
 8001298:	d1c9      	bne.n	800122e <__sflush_r+0x32>
 800129a:	682b      	ldr	r3, [r5, #0]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d0c6      	beq.n	800122e <__sflush_r+0x32>
 80012a0:	2b1d      	cmp	r3, #29
 80012a2:	d001      	beq.n	80012a8 <__sflush_r+0xac>
 80012a4:	2b16      	cmp	r3, #22
 80012a6:	d11e      	bne.n	80012e6 <__sflush_r+0xea>
 80012a8:	602f      	str	r7, [r5, #0]
 80012aa:	2000      	movs	r0, #0
 80012ac:	e022      	b.n	80012f4 <__sflush_r+0xf8>
 80012ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012b2:	b21b      	sxth	r3, r3
 80012b4:	e01b      	b.n	80012ee <__sflush_r+0xf2>
 80012b6:	690f      	ldr	r7, [r1, #16]
 80012b8:	2f00      	cmp	r7, #0
 80012ba:	d0f6      	beq.n	80012aa <__sflush_r+0xae>
 80012bc:	0793      	lsls	r3, r2, #30
 80012be:	680e      	ldr	r6, [r1, #0]
 80012c0:	bf08      	it	eq
 80012c2:	694b      	ldreq	r3, [r1, #20]
 80012c4:	600f      	str	r7, [r1, #0]
 80012c6:	bf18      	it	ne
 80012c8:	2300      	movne	r3, #0
 80012ca:	eba6 0807 	sub.w	r8, r6, r7
 80012ce:	608b      	str	r3, [r1, #8]
 80012d0:	f1b8 0f00 	cmp.w	r8, #0
 80012d4:	dde9      	ble.n	80012aa <__sflush_r+0xae>
 80012d6:	6a21      	ldr	r1, [r4, #32]
 80012d8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80012da:	4643      	mov	r3, r8
 80012dc:	463a      	mov	r2, r7
 80012de:	4628      	mov	r0, r5
 80012e0:	47b0      	blx	r6
 80012e2:	2800      	cmp	r0, #0
 80012e4:	dc08      	bgt.n	80012f8 <__sflush_r+0xfc>
 80012e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012ee:	81a3      	strh	r3, [r4, #12]
 80012f0:	f04f 30ff 	mov.w	r0, #4294967295
 80012f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012f8:	4407      	add	r7, r0
 80012fa:	eba8 0800 	sub.w	r8, r8, r0
 80012fe:	e7e7      	b.n	80012d0 <__sflush_r+0xd4>
 8001300:	dfbffffe 	.word	0xdfbffffe

08001304 <_fflush_r>:
 8001304:	b538      	push	{r3, r4, r5, lr}
 8001306:	690b      	ldr	r3, [r1, #16]
 8001308:	4605      	mov	r5, r0
 800130a:	460c      	mov	r4, r1
 800130c:	b913      	cbnz	r3, 8001314 <_fflush_r+0x10>
 800130e:	2500      	movs	r5, #0
 8001310:	4628      	mov	r0, r5
 8001312:	bd38      	pop	{r3, r4, r5, pc}
 8001314:	b118      	cbz	r0, 800131e <_fflush_r+0x1a>
 8001316:	6a03      	ldr	r3, [r0, #32]
 8001318:	b90b      	cbnz	r3, 800131e <_fflush_r+0x1a>
 800131a:	f7ff f9ad 	bl	8000678 <__sinit>
 800131e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001322:	2b00      	cmp	r3, #0
 8001324:	d0f3      	beq.n	800130e <_fflush_r+0xa>
 8001326:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001328:	07d0      	lsls	r0, r2, #31
 800132a:	d404      	bmi.n	8001336 <_fflush_r+0x32>
 800132c:	0599      	lsls	r1, r3, #22
 800132e:	d402      	bmi.n	8001336 <_fflush_r+0x32>
 8001330:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001332:	f7ff fb98 	bl	8000a66 <__retarget_lock_acquire_recursive>
 8001336:	4628      	mov	r0, r5
 8001338:	4621      	mov	r1, r4
 800133a:	f7ff ff5f 	bl	80011fc <__sflush_r>
 800133e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001340:	07da      	lsls	r2, r3, #31
 8001342:	4605      	mov	r5, r0
 8001344:	d4e4      	bmi.n	8001310 <_fflush_r+0xc>
 8001346:	89a3      	ldrh	r3, [r4, #12]
 8001348:	059b      	lsls	r3, r3, #22
 800134a:	d4e1      	bmi.n	8001310 <_fflush_r+0xc>
 800134c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800134e:	f7ff fb8b 	bl	8000a68 <__retarget_lock_release_recursive>
 8001352:	e7dd      	b.n	8001310 <_fflush_r+0xc>

08001354 <__swhatbuf_r>:
 8001354:	b570      	push	{r4, r5, r6, lr}
 8001356:	460c      	mov	r4, r1
 8001358:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800135c:	2900      	cmp	r1, #0
 800135e:	b096      	sub	sp, #88	@ 0x58
 8001360:	4615      	mov	r5, r2
 8001362:	461e      	mov	r6, r3
 8001364:	da0d      	bge.n	8001382 <__swhatbuf_r+0x2e>
 8001366:	89a3      	ldrh	r3, [r4, #12]
 8001368:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800136c:	f04f 0100 	mov.w	r1, #0
 8001370:	bf14      	ite	ne
 8001372:	2340      	movne	r3, #64	@ 0x40
 8001374:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001378:	2000      	movs	r0, #0
 800137a:	6031      	str	r1, [r6, #0]
 800137c:	602b      	str	r3, [r5, #0]
 800137e:	b016      	add	sp, #88	@ 0x58
 8001380:	bd70      	pop	{r4, r5, r6, pc}
 8001382:	466a      	mov	r2, sp
 8001384:	f000 f848 	bl	8001418 <_fstat_r>
 8001388:	2800      	cmp	r0, #0
 800138a:	dbec      	blt.n	8001366 <__swhatbuf_r+0x12>
 800138c:	9901      	ldr	r1, [sp, #4]
 800138e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001392:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001396:	4259      	negs	r1, r3
 8001398:	4159      	adcs	r1, r3
 800139a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800139e:	e7eb      	b.n	8001378 <__swhatbuf_r+0x24>

080013a0 <__smakebuf_r>:
 80013a0:	898b      	ldrh	r3, [r1, #12]
 80013a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013a4:	079d      	lsls	r5, r3, #30
 80013a6:	4606      	mov	r6, r0
 80013a8:	460c      	mov	r4, r1
 80013aa:	d507      	bpl.n	80013bc <__smakebuf_r+0x1c>
 80013ac:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80013b0:	6023      	str	r3, [r4, #0]
 80013b2:	6123      	str	r3, [r4, #16]
 80013b4:	2301      	movs	r3, #1
 80013b6:	6163      	str	r3, [r4, #20]
 80013b8:	b003      	add	sp, #12
 80013ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013bc:	ab01      	add	r3, sp, #4
 80013be:	466a      	mov	r2, sp
 80013c0:	f7ff ffc8 	bl	8001354 <__swhatbuf_r>
 80013c4:	9f00      	ldr	r7, [sp, #0]
 80013c6:	4605      	mov	r5, r0
 80013c8:	4639      	mov	r1, r7
 80013ca:	4630      	mov	r0, r6
 80013cc:	f7ff fbba 	bl	8000b44 <_malloc_r>
 80013d0:	b948      	cbnz	r0, 80013e6 <__smakebuf_r+0x46>
 80013d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013d6:	059a      	lsls	r2, r3, #22
 80013d8:	d4ee      	bmi.n	80013b8 <__smakebuf_r+0x18>
 80013da:	f023 0303 	bic.w	r3, r3, #3
 80013de:	f043 0302 	orr.w	r3, r3, #2
 80013e2:	81a3      	strh	r3, [r4, #12]
 80013e4:	e7e2      	b.n	80013ac <__smakebuf_r+0xc>
 80013e6:	89a3      	ldrh	r3, [r4, #12]
 80013e8:	6020      	str	r0, [r4, #0]
 80013ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013ee:	81a3      	strh	r3, [r4, #12]
 80013f0:	9b01      	ldr	r3, [sp, #4]
 80013f2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013f6:	b15b      	cbz	r3, 8001410 <__smakebuf_r+0x70>
 80013f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013fc:	4630      	mov	r0, r6
 80013fe:	f000 f81d 	bl	800143c <_isatty_r>
 8001402:	b128      	cbz	r0, 8001410 <__smakebuf_r+0x70>
 8001404:	89a3      	ldrh	r3, [r4, #12]
 8001406:	f023 0303 	bic.w	r3, r3, #3
 800140a:	f043 0301 	orr.w	r3, r3, #1
 800140e:	81a3      	strh	r3, [r4, #12]
 8001410:	89a3      	ldrh	r3, [r4, #12]
 8001412:	431d      	orrs	r5, r3
 8001414:	81a5      	strh	r5, [r4, #12]
 8001416:	e7cf      	b.n	80013b8 <__smakebuf_r+0x18>

08001418 <_fstat_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4d07      	ldr	r5, [pc, #28]	@ (8001438 <_fstat_r+0x20>)
 800141c:	2300      	movs	r3, #0
 800141e:	4604      	mov	r4, r0
 8001420:	4608      	mov	r0, r1
 8001422:	4611      	mov	r1, r2
 8001424:	602b      	str	r3, [r5, #0]
 8001426:	f7ff f812 	bl	800044e <_fstat>
 800142a:	1c43      	adds	r3, r0, #1
 800142c:	d102      	bne.n	8001434 <_fstat_r+0x1c>
 800142e:	682b      	ldr	r3, [r5, #0]
 8001430:	b103      	cbz	r3, 8001434 <_fstat_r+0x1c>
 8001432:	6023      	str	r3, [r4, #0]
 8001434:	bd38      	pop	{r3, r4, r5, pc}
 8001436:	bf00      	nop
 8001438:	200001b8 	.word	0x200001b8

0800143c <_isatty_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d06      	ldr	r5, [pc, #24]	@ (8001458 <_isatty_r+0x1c>)
 8001440:	2300      	movs	r3, #0
 8001442:	4604      	mov	r4, r0
 8001444:	4608      	mov	r0, r1
 8001446:	602b      	str	r3, [r5, #0]
 8001448:	f7ff f811 	bl	800046e <_isatty>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_isatty_r+0x1a>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	b103      	cbz	r3, 8001456 <_isatty_r+0x1a>
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	200001b8 	.word	0x200001b8

0800145c <_sbrk_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d06      	ldr	r5, [pc, #24]	@ (8001478 <_sbrk_r+0x1c>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	f7ff f81a 	bl	80004a0 <_sbrk>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_sbrk_r+0x1a>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_sbrk_r+0x1a>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	200001b8 	.word	0x200001b8

0800147c <_init>:
 800147c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147e:	bf00      	nop
 8001480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001482:	bc08      	pop	{r3}
 8001484:	469e      	mov	lr, r3
 8001486:	4770      	bx	lr

08001488 <_fini>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr
